syntax = "proto3";
option go_package = "./internal/proto;libp2p";

package libp2p_proto;

message InitArgs {
    repeated string listen_addr = 1;
}

message SetHandler {
    // Protocol ID to set the handler for.
    string protocol_id = 1;
    // Handler for requests of the given protocol.
    bytes handler = 2;
}

message SubscribeToTopic {
    // Name of the topic to subscribe to.
    string name = 1;
}

message UnsubscribeFromTopic {
    // Name of the topic to subscribe to.
    string name = 1;
}

message AddPeer {
    bytes id = 1;
    repeated string addrs = 2;
    int64 ttl = 3;
}

message SendRequest {
    bytes id = 1;
    string protocol_id = 2;
    bytes message = 3;
}

message SendResponse {
    string message_id = 1;
    bytes message = 2;
}

message GetId {}

message Command {
    bytes from = 1;
    oneof c {
        SetHandler set_handler = 2;
        SubscribeToTopic subscribe = 3;
        UnsubscribeFromTopic unsubscribe = 4;
        AddPeer add_peer = 5;
        SendRequest send_request = 6;
        SendResponse send_response = 7;
        GetId get_id = 8;
    }
}

message GossipSub {
    // Name of the topic from which the notification arrived.
    string topic = 1;
    // Compressed and ssz encoded message.
    bytes message = 2;
}

// A request from a peer.
message Request {
    string protocol_id = 1;
    bytes handler = 2;
    string message_id = 3;
    bytes message = 4;
}

// A result from a command.
message Result {
    bytes from = 1;
    bool success = 2;
    bytes message = 3;
}

message Notification {
    oneof n {
        GossipSub gossip = 1;
        Request request = 2;
        Result result = 3;
    }
}
