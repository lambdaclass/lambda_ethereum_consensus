
mix test --no-start --only implemented_spectest
Compiling 4 files (.ex)
Excluding tags: [:test]
Including tags: [:implemented_spectest]

file path: tests/minimal/capella/operations/deposit/pyspec_tests/success_top_up_to_withdrawn_validator/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/success_top_up_to_withdrawn_validator/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
.......%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140, 79, 169,
      172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63, 23, 27,
      172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10, 219, 34,
      198, ...>>,
    withdrawal_credentials: <<0, 207, 71, 138, 67, 24, 55, 114, 141, 206, 195,
      70, 31, 79, 83, 184, 116, 156, 220, 78, 3, 73, 109, 202, 237, 69, 157,
      234, 130, 184, 46, 184>>,
    amount: 8000000000,
    signature: <<135, 142, 124, 91, 157, 32, 251, 93, 62, 255, 200, 74, 146,
      209, 197, 96, 21, 143, 217, 6, 49, 96, 51, 58, 248, 22, 200, 106, 95, 149,
      84, 35, 94, 64, 104, 133, 251, 189, 124, 103, 152, 173, 109, 87, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/success_top_up_to_withdrawn_validator/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/misc_balances/pre.ssz_snappy
.pre before deserializing BeaconState
.✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/misc_balances/attester_slashing.ssz_snappy
.attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [0, 10, 22, 35, 43, 63],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<90, 10, 52, 213, 210, 90, 66, 195, 45, 61, 191, 43,
        217, 201, 78, 245, 154, 239, 161, 183, 112, 215, 102, 192, 254, 26, 242,
        187, 190, 130, 108, 221>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<90, 10, 52, 213, 210, 90, 66, 195, 45, 61, 191, 43, 217, 201,
          78, 245, 154, 239, 161, 183, 112, 215, 102, 192, 254, 26, 242, 187,
          190, 130, 108, 221>>,
        epoch: 0
      }
    },
    signature: <<169, 142, 73, 202, 172, 134, 192, 114, 194, 44, 59, 196, 27,
      243, 163, 70, 107, 216, 94, 198, 52, 104, 125, 128, 174, 122, 86, 24, 106,
      36, 59, 225, 32, 200, 245, 173, 34, 224, 235, 118, 146, 250, 95, 60, 61,
      102, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [0, 10, 22, 35, 43, 63],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<90, 10, 52, 213, 210, 90, 66, 195, 45, 61, 191, 43,
        217, 201, 78, 245, 154, 239, 161, 183, 112, 215, 102, 192, 254, 26, 242,
        187, 190, 130, 108, 221>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<161, 245, 29, 139, 171, 235, 102, 142, 66, 207, 217, 82, 175,
      4, 87, 67, 244, 186, 194, 20, 44, 183, 168, 164, 176, 35, 6, 60, 59, 141,
      102, 151, 247, 192, 211, 120, 182, 135, 154, 206, 172, 35, 48, 184, 247,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/misc_balances/post.ssz_snappy
post before deserializing BeaconState
✅ post
.file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_slashed/pre.ssz_snappy
.pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_slashed/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_slashed/post.ssz_snappy
✅ post
.....................................................................................................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_incorrect_from_bls_pubkey/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_incorrect_from_bls_pubkey/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 2,
    from_bls_pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140,
      79, 169, 172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63,
      23, 27, 172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10,
      219, 34, 198, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<165, 27, 53, 177, 197, 116, 235, 59, 174, 88, 91, 139, 217, 104,
    83, 70, 114, 240, 48, 101, 193, 6, 212, 122, 9, 199, 160, 187, 16, 101, 60,
    203, 150, 117, 97, 54, 164, 108, 92, 240, 162, 134, 200, 216, 253, 233, 69,
    244, ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_incorrect_from_bls_pubkey/post.ssz_snappy
✅ post
.............file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_included_at_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_included_at_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<131, 219, 207, 56, 2, 14, 226, 218, 219, 212, 38, 35, 173, 136,
    237, 54, 244, 172, 212, 20, 175, 172, 12, 99, 148, 138, 3, 105, 21, 83, 99,
    185, 81, 187, 162, 114, 165, 216, 124, 203, 181, 186, 112, 0, 74, 196, 79,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_included_at_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
...................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_two_partial_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_two_partial_withdrawable/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<19, 110, 153, 174, 255, 71, 62, 175, 250, 132, 199, 189, 226,
    35, 78, 96, 80, 211, 224, 39, 73, 142, 18, 119, 205, 155, 166, 31, 3, 20,
    43, 89>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_two_partial_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....................file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_attestation_signature/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_attestation_signature/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_attestation_signature/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_eth1_withdrawal_credentials/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_eth1_withdrawal_credentials/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 89, 89,
      89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89>>,
    amount: 32000000000,
    signature: <<170, 43, 146, 246, 101, 203, 174, 97, 210, 73, 214, 194, 12, 0,
      143, 69, 17, 138, 3, 108, 225, 125, 57, 167, 31, 61, 170, 56, 216, 8, 72,
      208, 44, 9, 61, 48, 155, 38, 133, 207, 231, 215, 2, 166, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_eth1_withdrawal_credentials/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_incorrect_validator_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_incorrect_validator_index/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 64},
  signature: <<179, 200, 118, 45, 114, 164, 149, 214, 73, 125, 11, 226, 197, 73,
    72, 61, 58, 168, 78, 183, 213, 130, 226, 193, 192, 243, 92, 170, 253, 152,
    191, 230, 110, 135, 184, 79, 178, 250, 32, 42, 21, 249, 95, 20, 30, 164, 40,
    249, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_incorrect_validator_index/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_previous_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_previous_fork_version/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<140, 77, 85, 205, 118, 219, 55, 186, 84, 118, 133, 43, 46, 116,
    122, 195, 128, 233, 11, 210, 154, 145, 149, 235, 117, 99, 95, 121, 191, 201,
    169, 227, 189, 174, 235, 87, 112, 44, 68, 228, 183, 180, 238, 151, 220, 222,
    28, 252, ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_previous_fork_version/post.ssz_snappy
✅ post
...............................................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_high_participation_without_duplicates/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_high_participation_without_duplicates/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<239, 151, 151, 247>>,
  sync_committee_signature: <<180, 221, 197, 229, 207, 43, 75, 122, 195, 176,
    199, 65, 117, 135, 203, 108, 3, 225, 166, 141, 156, 15, 18, 5, 54, 108, 78,
    211, 125, 226, 4, 30, 102, 242, 9, 32, 30, 99, 159, 127, 69, 171, 79, 252,
    77, 200, 163, 205, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_high_participation_without_duplicates/post.ssz_snappy
post before deserializing BeaconState
✅ post
....file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_execution_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_execution_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_execution_regular_payload/post.ssz_snappy
✅ post
.................................................file path: tests/minimal/capella/operations/deposit/pyspec_tests/invalid_wrong_deposit_for_deposit_count/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/invalid_wrong_deposit_for_deposit_count/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<54, 26, 70, 7, 82, 3, 253, 92, 12, 10, 93, 229, 169, 201, 76, 158, 66,
      227, 148, 110, 158, 23, 239, 20, 157, 168, 222, 223, 63, 140, 14, 159>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<123, 185, 225, 178, 116, 190, 108, 223, 135, 132, 95, 169, 79, 158, 51,
      242, 118, 134, 94, 124, 211, 176, 175, 112, 107, 27, 7, 0, 186, 143, 152,
      41>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<164, 232, 244, 164, 248, 31, 133, 95, 70, 81, 42, 248, 205, 203,
      201, 174, 138, 126, 179, 149, 167, 95, 19, 94, 85, 105, 183, 88, 168, 217,
      35, 73, 104, 26, 3, 88, 80, 15, 45, 65, 244, 87, 141, 63, 127, 250, 169,
      ...>>,
    withdrawal_credentials: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    amount: 32000000000,
    signature: <<162, 96, 134, 14, 133, 112, 178, 189, 152, 7, 62, 217, 238,
      194, 220, 213, 165, 82, 160, 217, 146, 240, 219, 145, 152, 159, 62, 70,
      240, 34, 193, 11, 79, 49, 84, 108, 42, 111, 156, 221, 125, 105, 2, 64,
      ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/invalid_wrong_deposit_for_deposit_count/post.ssz_snappy
✅ post
..........file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_current_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_current_fork_version/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<135, 201, 191, 166, 178, 134, 148, 164, 85, 165, 10, 30, 87,
      159, 0, 177, 217, 203, 86, 73, 48, 100, 240, 247, 230, 145, 76, 170, 240,
      175, 169, 156, 247, 203, 249, 248, 131, 236, 59, 212, 218, 66, 132, 60,
      ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_current_fork_version/post.ssz_snappy
post before deserializing BeaconState
✅ post
.file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_first_payload_with_gap_slot/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_first_payload_with_gap_slot/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_first_payload_with_gap_slot/post.ssz_snappy
post before deserializing BeaconState
✅ post
..............file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_correct_attestation_included_after_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_correct_attestation_included_after_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_correct_attestation_included_after_epoch_delay/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/low_balances/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/low_balances/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<103, 140, 136, 63, 31, 213, 193, 145, 186, 2, 77,
        149, 167, 65, 252, 108, 160, 239, 177, 143, 8, 197, 218, 168, 146, 99,
        153, 161, 156, 203, 11, 53>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<103, 140, 136, 63, 31, 213, 193, 145, 186, 2, 77, 149, 167, 65,
          252, 108, 160, 239, 177, 143, 8, 197, 218, 168, 146, 99, 153, 161,
          156, 203, 11, 53>>,
        epoch: 0
      }
    },
    signature: <<172, 113, 226, 7, 126, 239, 15, 135, 135, 104, 84, 100, 81,
      221, 210, 248, 8, 24, 201, 203, 149, 241, 85, 188, 129, 195, 81, 117, 159,
      101, 229, 214, 141, 198, 72, 109, 211, 213, 18, 193, 31, 211, 77, 128,
      132, 132, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<103, 140, 136, 63, 31, 213, 193, 145, 186, 2, 77,
        149, 167, 65, 252, 108, 160, 239, 177, 143, 8, 197, 218, 168, 146, 99,
        153, 161, 156, 203, 11, 53>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<181, 229, 184, 62, 96, 74, 118, 110, 170, 184, 104, 24, 70,
      127, 218, 178, 85, 109, 106, 82, 123, 140, 212, 135, 179, 250, 184, 121,
      227, 23, 200, 56, 35, 202, 16, 159, 72, 232, 58, 114, 119, 211, 117, 122,
      181, ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/low_balances/post.ssz_snappy
post before deserializing BeaconState
✅ post
.............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_no_max_effective_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_no_max_effective_balance/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<112, 67, 68, 255, 104, 105, 29, 145, 14, 15, 107, 13, 32, 76,
    154, 254, 158, 221, 150, 24, 56, 252, 93, 138, 170, 0, 185, 199, 42, 118,
    253, 189>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_no_max_effective_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
..................................................................................................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_mixed_fully_and_partial_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_mixed_fully_and_partial_withdrawable/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<201, 221, 224, 52, 221, 74, 72, 153, 240, 161, 93, 109, 114, 43,
    53, 77, 170, 64, 173, 195, 191, 82, 224, 214, 5, 34, 184, 5, 33, 5, 104,
    98>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 4,
      address: <<2, 243, 231, 199, 189, 84, 140, 177, 182, 28, 38, 214, 129, 33,
        1, 206, 221, 62, 198, 112>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 12,
      address: <<212, 135, 142, 5, 253, 236, 252, 28, 193, 51, 202, 51, 85, 110,
        59, 131, 119, 100, 29, 84>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_mixed_fully_and_partial_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
...................file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_proposer_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_proposer_index/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 64,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 64,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_proposer_index/post.ssz_snappy
✅ post
......file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawal/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawal/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<232, 210, 107, 34, 4, 172, 106, 105, 112, 18, 121, 49, 102, 135,
    193, 139, 197, 241, 164, 179, 201, 180, 97, 160, 22, 50, 15, 247, 181, 183,
    248, 122>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawal/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_previous_committee/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_previous_committee/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<171, 91, 1, 134, 177, 159, 73, 68, 163, 8, 233,
    191, 122, 60, 211, 131, 105, 42, 147, 40, 126, 223, 158, 98, 147, 254, 118,
    212, 214, 186, 202, 185, 251, 225, 166, 115, 178, 23, 42, 104, 204, 6, 148,
    139, 244, 49, 31, 144, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_previous_committee/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_future_timestamp_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_future_timestamp_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_future_timestamp_regular_payload/post.ssz_snappy
✅ post
.........file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_infinite_signature_with_single_participant/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_infinite_signature_with_single_participant/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<1, 0, 0, 0>>,
  sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_infinite_signature_with_single_participant/post.ssz_snappy
✅ post
.................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_full_withdrawal/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_full_withdrawal/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<158, 119, 243, 112, 232, 63, 142, 179, 9, 253, 151, 21, 119,
    157, 228, 228, 66, 66, 146, 78, 31, 14, 159, 144, 96, 166, 89, 43, 149, 23,
    17, 32>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_full_withdrawal/post.ssz_snappy
post before deserializing BeaconState
✅ post
..file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_low_participation_without_duplicates/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_low_participation_without_duplicates/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<10, 80, 166, 0>>,
  sync_committee_signature: <<172, 224, 70, 162, 157, 180, 0, 94, 86, 246, 174,
    67, 10, 23, 37, 31, 192, 156, 72, 89, 142, 105, 14, 222, 81, 187, 83, 108,
    180, 42, 6, 69, 17, 112, 46, 98, 200, 223, 55, 254, 190, 156, 255, 59, 244,
    42, 253, 106, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_low_participation_without_duplicates/post.ssz_snappy
post before deserializing BeaconState
✅ post
............file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_slot_block_header/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_slot_block_header/block.ssz_snappy
block_header before deserializing Elixir.SszTypes.BeaconBlock
✅ operation
%SszTypes.BeaconBlock{
  slot: 2,
  proposer_index: 63,
  parent_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
    27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236, 18,
    174>>,
  state_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  body: %SszTypes.BeaconBlockBody{
    randao_reveal: <<137, 85, 125, 30, 107, 185, 57, 85, 62, 17, 39, 234, 210,
      192, 75, 131, 87, 222, 191, 229, 115, 179, 109, 50, 93, 38, 251, 60, 30,
      62, 217, 133, 176, 165, 243, 79, 128, 64, 90, 162, 189, 54, 45, 29, ...>>,
    eth1_data: %SszTypes.Eth1Data{
      deposit_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      deposit_count: 64,
      block_hash: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>
    },
    graffiti: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    proposer_slashings: [],
    attester_slashings: [],
    attestations: [],
    deposits: [],
    voluntary_exits: [],
    sync_aggregate: %SszTypes.SyncAggregate{
      sync_committee_bits: <<0, 0, 0, 0>>,
      sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
    },
    execution_payload: %SszTypes.ExecutionPayload{
      parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77,
        47, 243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194,
        17, 168, 42>>,
      fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0>>,
      state_root: "                                ",
      receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103,
        182, 204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66,
        253, 64, 212, 147, ...>>,
      logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
      prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, ...>>,
      block_number: 1,
      gas_limit: 30000000,
      gas_used: 0,
      timestamp: 6,
      extra_data: "",
      base_fee_per_gas: 1000000000,
      block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26,
        250, 150, 57, 48, 204, 247, 4, 37, 12, ...>>,
      transactions: [],
      withdrawals: []
    },
    bls_to_execution_changes: []
  }
}
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_slot_block_header/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_with_exits_without_duplicates/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_with_exits_without_duplicates/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<89, 49, 154, 206>>,
  sync_committee_signature: <<141, 121, 1, 44, 252, 84, 113, 1, 11, 171, 33,
    234, 9, 9, 113, 50, 38, 244, 6, 211, 113, 199, 250, 241, 117, 123, 47, 168,
    150, 172, 79, 242, 51, 131, 153, 168, 175, 152, 0, 18, 165, 68, 3, 237, 231,
    77, 228, 38, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_with_exits_without_duplicates/post.ssz_snappy
post before deserializing BeaconState
✅ post
................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_same_data/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_same_data/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      151, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_same_data/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_slot_1/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_slot_1/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 2,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_slot_1/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_3/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_3/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<104, 37, 9, 246, 178, 168, 103, 37, 177, 228, 66, 75, 74, 246,
    253, 131, 59, 124, 190, 248, 141, 157, 33, 27, 130, 114, 94, 1, 124, 99, 79,
    47>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 16,
      address: <<65, 221, 21, 144, 5, 60, 151, 84, 114, 222, 151, 207, 149, 227,
        80, 70, 17, 192, 121, 23>>,
      amount: 608158156
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 17,
      address: <<131, 183, 69, 157, 15, 26, 166, 18, 103, 3, 30, 29, 52, 82, 12,
        146, 17, 235, 231, 78>>,
      amount: 546194160
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 18,
      address: <<200, 142, 244, 134, 208, 32, 16, 75, 88, 40, 18, 203, 158, 206,
        86, 3, 153, 91, 75, 107>>,
      amount: 192311908
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 20,
      address: <<115, 209, 165, 31, 234, 28, 6, 116, 35, 66, 124, 237, 79, 106,
        98, 59, 211, 206, 69, 210>>,
      amount: 121650706
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_3/post.ssz_snappy
post before deserializing BeaconState
✅ post
..............................................................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_high_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_high_index/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33, 64],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_high_index/post.ssz_snappy
✅ post
...........................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_execution_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_execution_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_execution_first_payload/post.ssz_snappy
✅ post
.............file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/proposer_in_committee_without_participation/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/proposer_in_committee_without_participation/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 239, 255, 255>>,
  sync_committee_signature: <<180, 199, 212, 194, 130, 17, 230, 205, 175, 7,
    188, 90, 171, 207, 106, 138, 105, 200, 140, 249, 26, 10, 108, 21, 254, 192,
    57, 54, 204, 89, 19, 69, 8, 131, 43, 165, 208, 197, 237, 108, 54, 192, 241,
    177, 165, 26, 142, 102, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/proposer_in_committee_without_participation/post.ssz_snappy
post before deserializing BeaconState
✅ post
..............................................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_bad_signature/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_bad_signature/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_bad_signature/post.ssz_snappy
✅ post
..........file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_transactions_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_transactions_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_transactions_regular_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<138, 178, 99, 20, 20, 253, 49, 193, 153, 93, 21, 184, 62, 86, 17,
    82, 139, 128, 247, 162, 115, 228, 228, 96, 2, 117, 56, 57, 91, 173, 149, 86,
    191, 183, 31, 218, 120, 126, 0, 145, 216, 144, 134, 99, 197, 166, 75, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
......................file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/basic/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/basic/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 0},
  signature: <<149, 73, 243, 215, 181, 35, 55, 21, 80, 255, 80, 70, 102, 80,
    217, 83, 66, 101, 86, 122, 22, 164, 205, 114, 184, 126, 239, 229, 17, 81,
    222, 241, 206, 126, 129, 236, 201, 191, 219, 172, 50, 5, 92, 225, 216, 96,
    150, 124, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/basic/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_head_and_target_included_after_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_head_and_target_included_after_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<131, 219, 207, 56, 2, 14, 226, 218, 219, 212, 38, 35, 173, 136,
    237, 54, 244, 172, 212, 20, 175, 172, 12, 99, 148, 138, 3, 105, 21, 83, 99,
    185, 81, 187, 162, 114, 165, 216, 124, 203, 181, 186, 112, 0, 74, 196, 79,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_head_and_target_included_after_epoch_delay/post.ssz_snappy
✅ post
...............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_non_withdrawable_non_empty_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_non_withdrawable_non_empty_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<231, 141, 88, 211, 223, 233, 18, 196, 8, 253, 171, 105, 139,
    122, 4, 75, 255, 208, 71, 123, 201, 4, 60, 75, 166, 129, 137, 9, 197, 101,
    95, 58>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: "00000000000000000000",
      amount: 420
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_non_withdrawable_non_empty_withdrawals/post.ssz_snappy
✅ post
..file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/basic_double/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/basic_double/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/basic_double/post.ssz_snappy
post before deserializing BeaconState
✅ post
...file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_2/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_2/post.ssz_snappy
✅ post
..............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_two_expected_partial_withdrawal_and_duplicate_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_two_expected_partial_withdrawal_and_duplicate_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<88, 220, 210, 48, 10, 155, 154, 151, 52, 95, 78, 119, 246, 204,
    221, 158, 235, 58, 147, 241, 60, 26, 192, 215, 13, 84, 22, 163, 236, 17, 77,
    62>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 4,
      address: <<2, 243, 231, 199, 189, 84, 140, 177, 182, 28, 38, 214, 129, 33,
        1, 206, 221, 62, 198, 112>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 5,
      address: <<113, 239, 248, 53, 59, 231, 116, 223, 129, 126, 205, 18, 31,
        121, 73, 72, 186, 138, 105, 4>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 4,
      address: <<2, 243, 231, 199, 189, 84, 140, 177, 182, 28, 38, 214, 129, 33,
        1, 206, 221, 62, 198, 112>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_two_expected_partial_withdrawal_and_duplicate_in_withdrawals/post.ssz_snappy
✅ post
...............................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2/post.ssz_snappy
✅ post
....................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_nonduplicate_committee/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_nonduplicate_committee/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<171, 91, 1, 134, 177, 159, 73, 68, 163, 8, 233,
    191, 122, 60, 211, 131, 105, 42, 147, 40, 126, 223, 158, 98, 147, 254, 118,
    212, 214, 186, 202, 185, 251, 225, 166, 115, 178, 23, 42, 104, 204, 6, 148,
    139, 244, 49, 31, 144, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_nonduplicate_committee/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_misc_balances_and_half_participation_without_duplicates/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_misc_balances_and_half_participation_without_duplicates/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<163, 111, 170, 10>>,
  sync_committee_signature: <<134, 43, 42, 241, 31, 140, 64, 69, 66, 160, 180,
    100, 115, 89, 202, 165, 11, 51, 118, 250, 139, 222, 7, 29, 13, 219, 36, 122,
    93, 112, 21, 133, 147, 37, 98, 254, 116, 153, 28, 123, 130, 69, 159, 3, 200,
    187, 189, 122, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_misc_balances_and_half_participation_without_duplicates/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_2/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_2/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_under_max/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_under_max/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 31999999999,
    signature: <<163, 69, 87, 40, 179, 72, 18, 137, 155, 87, 142, 238, 161, 224,
      40, 78, 62, 156, 220, 245, 39, 163, 252, 62, 209, 219, 12, 160, 177, 40,
      126, 200, 213, 25, 84, 66, 70, 136, 178, 29, 50, 217, 192, 81, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_under_max/post.ssz_snappy
post before deserializing BeaconState
✅ post
.............................................................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_only_one_participant_without_duplicates/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_only_one_participant_without_duplicates/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<0, 0, 4, 0>>,
  sync_committee_signature: <<142, 90, 190, 51, 80, 52, 220, 17, 131, 166, 99,
    0, 79, 196, 221, 181, 87, 26, 32, 252, 155, 14, 72, 173, 99, 130, 240, 29,
    124, 61, 171, 204, 182, 175, 131, 163, 183, 184, 4, 35, 220, 10, 128, 235,
    84, 82, 63, 137, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_only_one_participant_without_duplicates/post.ssz_snappy
post before deserializing BeaconState
✅ post
.file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_in_exit_queue/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_in_exit_queue/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<130, 199, 135, 70, 165, 226, 82, 167, 194, 237, 222, 164, 240,
    198, 76, 41, 254, 79, 56, 151, 1, 237, 84, 238, 111, 86, 27, 203, 115, 166,
    140, 252>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_in_exit_queue/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........................................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_participants_already_slashed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_participants_already_slashed/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_participants_already_slashed/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_3/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_3/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<145, 202, 76, 0, 250, 234, 89, 60, 53, 205, 244, 213, 119, 217,
    65, 223, 232, 202, 235, 251, 57, 40, 130, 161, 142, 23, 128, 116, 219, 116,
    60, 78>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 31996304960
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 31993755593
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 4,
      address: <<2, 243, 231, 199, 189, 84, 140, 177, 182, 28, 38, 214, 129, 33,
        1, 206, 221, 62, 198, 112>>,
      amount: 31995040060
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 6,
      address: <<30, 75, 120, 105, 69, 255, 83, 131, 78, 55, 145, 45, 71, 231,
        127, 43, 186, 71, 129, 32>>,
      amount: 31995672561
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_3/post.ssz_snappy
post before deserializing BeaconState
✅ post
................................................file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_genesis_fork_version_is_before_fork_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_genesis_fork_version_is_before_fork_epoch/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 0, validator_index: 0},
  signature: <<182, 74, 141, 61, 59, 239, 144, 206, 36, 243, 202, 51, 252, 47,
    129, 94, 196, 74, 25, 75, 218, 32, 248, 144, 244, 241, 102, 142, 55, 52,
    225, 12, 64, 203, 62, 203, 144, 4, 83, 200, 233, 87, 12, 78, 136, 160, 192,
    80, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_genesis_fork_version_is_before_fork_epoch/post.ssz_snappy
✅ post
..............file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_already_exited/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_already_exited/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 0},
  signature: <<149, 73, 243, 215, 181, 35, 55, 21, 80, 255, 80, 70, 102, 80,
    217, 83, 66, 101, 86, 122, 22, 164, 205, 114, 184, 126, 239, 229, 17, 81,
    222, 241, 206, 126, 129, 236, 201, 191, 219, 172, 50, 5, 92, 225, 216, 96,
    150, 124, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_already_exited/post.ssz_snappy
✅ post
..........................................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_regular_payload_with_gap_slot/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_regular_payload_with_gap_slot/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_regular_payload_with_gap_slot/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_max_plus_one_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_max_plus_one_withdrawable/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<243, 57, 149, 87, 115, 200, 113, 0, 87, 95, 20, 148, 155, 191,
    194, 206, 21, 193, 15, 86, 72, 47, 27, 255, 127, 253, 4, 139, 175, 95, 61,
    78>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_max_plus_one_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_1/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_1/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<254, 58, 53, 6, 240, 20, 204, 34, 198, 189, 4, 96, 219, 18, 62,
    118, 242, 65, 108, 150, 110, 67, 32, 9, 6, 157, 43, 243, 176, 137, 39,
    126>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 49,
      address: <<86, 6, 222, 178, 185, 252, 153, 69, 86, 234, 55, 207, 118, 67,
        39, 108, 11, 119, 185, 130>>,
      amount: 463062439
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 51,
      address: <<79, 178, 199, 206, 70, 253, 176, 139, 44, 56, 239, 95, 124, 1,
        179, 39, 155, 113, 195, 154>>,
      amount: 349467825
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 54,
      address: <<63, 99, 202, 137, 45, 245, 40, 149, 211, 2, 218, 89, 196, 245,
        208, 223, 9, 15, 174, 122>>,
      amount: 126798202
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 61,
      address: <<62, 204, 70, 119, 4, 13, 84, 19, 199, 185, 199, 148, 172, 75,
        30, 243, 36, 83, 64, 147>>,
      amount: 32227649515
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_1/post.ssz_snappy
post before deserializing BeaconState
✅ post
......................file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/success_exit_queue__min_churn/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/success_exit_queue__min_churn/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 63},
  signature: <<148, 167, 82, 165, 20, 112, 250, 78, 226, 104, 76, 49, 122, 15,
    7, 10, 37, 218, 47, 11, 68, 94, 205, 26, 1, 36, 106, 94, 63, 50, 16, 62, 33,
    201, 116, 149, 15, 17, 1, 107, 53, 31, 249, 89, 87, 55, 229, 154, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/success_exit_queue__min_churn/post.ssz_snappy
post before deserializing BeaconState
✅ post
......................................................file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_one_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_one_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_one_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
...................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_empty_indices/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_empty_indices/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_empty_indices/post.ssz_snappy
✅ post
.....file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_empty_indices/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_empty_indices/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_empty_indices/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/no_withdrawals_but_some_next_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/no_withdrawals_but_some_next_epoch/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<112, 67, 68, 255, 104, 105, 29, 145, 14, 15, 107, 13, 32, 76,
    154, 254, 158, 221, 150, 24, 56, 252, 93, 138, 170, 0, 185, 199, 42, 118,
    253, 189>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/no_withdrawals_but_some_next_epoch/post.ssz_snappy
post before deserializing BeaconState
✅ post
................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_excess_balance_but_no_max_effective_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_excess_balance_but_no_max_effective_balance/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<112, 67, 68, 255, 104, 105, 29, 145, 14, 15, 107, 13, 32, 76,
    154, 254, 158, 221, 150, 24, 56, 252, 93, 138, 170, 0, 185, 199, 42, 118,
    253, 189>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_excess_balance_but_no_max_effective_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
...........file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_everything_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_everything_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_everything_first_payload/post.ssz_snappy
✅ post
....file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_extra_data_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_extra_data_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_extra_data_regular_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
...................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_pre_randao_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_pre_randao_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_pre_randao_regular_payload/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_no_excess_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_no_excess_balance/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<112, 67, 68, 255, 104, 105, 29, 145, 14, 15, 107, 13, 32, 76,
    154, 254, 158, 221, 150, 24, 56, 252, 93, 138, 170, 0, 185, 199, 42, 118,
    253, 189>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_no_excess_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
....................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/already_exited_recent/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/already_exited_recent/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/already_exited_recent/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_duplicate_index_double_signed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_duplicate_index_double_signed/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 30, 33, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<177, 227, 140, 249, 136, 123, 2, 28, 185, 110, 38, 20, 88, 160,
      150, 142, 63, 170, 79, 210, 215, 249, 34, 217, 109, 52, 47, 80, 130, 223,
      79, 18, 55, 159, 96, 70, 16, 91, 100, 68, 49, 160, 11, 89, 44, ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_duplicate_index_double_signed/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_withdrawal_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_withdrawal_index/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<153, 22, 225, 147, 104, 47, 70, 234, 162, 188, 207, 133, 39, 3,
    90, 179, 14, 98, 225, 73, 98, 178, 145, 74, 90, 221, 33, 20, 68, 56, 246,
    124>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_withdrawal_index/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/proposer_in_committee_with_participation/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/proposer_in_committee_with_participation/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<171, 91, 1, 134, 177, 159, 73, 68, 163, 8, 233,
    191, 122, 60, 211, 131, 105, 42, 147, 40, 126, 223, 158, 98, 147, 254, 118,
    212, 214, 186, 202, 185, 251, 225, 166, 115, 178, 23, 42, 104, 204, 6, 148,
    139, 244, 49, 31, 144, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/proposer_in_committee_with_participation/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_2/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<178, 164, 118, 41, 194, 39, 155, 188, 175, 104, 69, 219, 71,
    234, 32, 233, 208, 72, 228, 20, 175, 170, 41, 4, 174, 69, 158, 251, 65, 32,
    150, 236>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 41,
      address: <<18, 148, 40, 102, 95, 145, 102, 179, 54, 41, 151, 107, 156,
        212, 4, 23, 116, 87, 88, 33>>,
      amount: 32344647623
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 42,
      address: <<156, 244, 42, 169, 84, 71, 113, 1, 115, 134, 197, 150, 47, 54,
        207, 91, 185, 153, 115, 163>>,
      amount: 32257792991
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 43,
      address: <<174, 198, 123, 80, 40, 254, 181, 106, 229, 64, 9, 73, 212, 47,
        117, 7, 65, 207, 159, 106>>,
      amount: 548067426
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 44,
      address: <<203, 160, 188, 111, 183, 185, 163, 162, 166, 238, 26, 61, 76,
        87, 159, 77, 242, 195, 134, 176>>,
      amount: 32899408006
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_2/post.ssz_snappy
post before deserializing BeaconState
✅ post
................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_address_partial/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_address_partial/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<96, 230, 207, 138, 229, 27, 64, 194, 208, 88, 80, 140, 205, 166,
    103, 21, 165, 113, 85, 4, 46, 176, 130, 155, 181, 23, 80, 142, 224, 141, 55,
    251>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 12,
      address: <<255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_address_partial/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_all_partially_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_all_partially_withdrawable/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<129, 140, 92, 243, 222, 34, 68, 64, 221, 91, 138, 105, 249, 235,
    183, 201, 206, 177, 181, 33, 84, 219, 96, 17, 247, 249, 247, 185, 168, 23,
    125, 247>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_all_partially_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
................file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_sig_new_deposit/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_sig_new_deposit/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_sig_new_deposit/post.ssz_snappy
post before deserializing BeaconState
✅ post
..file path: tests/minimal/capella/operations/deposit/pyspec_tests/key_validate_invalid_subgroup/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/key_validate_invalid_subgroup/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>,
    withdrawal_credentials: <<0, 176, 118, 31, 135, 176, 129, 213, 207, 16, 117,
      124, 204, 137, 241, 43, 227, 85, 199, 14, 46, 41, 223, 40, 139, 101, 179,
      7, 16, 220, 188, 209>>,
    amount: 32000000000,
    signature: <<179, 42, 63, 99, 119, 9, 175, 168, 214, 198, 134, 68, 210, 214,
      158, 157, 75, 246, 172, 36, 227, 123, 153, 25, 48, 63, 40, 169, 166, 119,
      28, 227, 149, 198, 38, 114, 79, 14, 11, 204, 154, 3, 46, 9, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/key_validate_invalid_subgroup/post.ssz_snappy
post before deserializing BeaconState
✅ post
..............file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_proposer_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_proposer_index/block.ssz_snappy
block_header before deserializing Elixir.SszTypes.BeaconBlock
✅ operation
%SszTypes.BeaconBlock{
  slot: 1,
  proposer_index: 0,
  parent_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
    27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236, 18,
    174>>,
  state_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  body: %SszTypes.BeaconBlockBody{
    randao_reveal: <<137, 85, 125, 30, 107, 185, 57, 85, 62, 17, 39, 234, 210,
      192, 75, 131, 87, 222, 191, 229, 115, 179, 109, 50, 93, 38, 251, 60, 30,
      62, 217, 133, 176, 165, 243, 79, 128, 64, 90, 162, 189, 54, 45, 29, ...>>,
    eth1_data: %SszTypes.Eth1Data{
      deposit_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      deposit_count: 64,
      block_hash: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>
    },
    graffiti: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    proposer_slashings: [],
    attester_slashings: [],
    attestations: [],
    deposits: [],
    voluntary_exits: [],
    sync_aggregate: %SszTypes.SyncAggregate{
      sync_committee_bits: <<0, 0, 0, 0>>,
      sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
    },
    execution_payload: %SszTypes.ExecutionPayload{
      parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77,
        47, 243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194,
        17, 168, 42>>,
      fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0>>,
      state_root: "                                ",
      receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103,
        182, 204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66,
        253, 64, 212, 147, ...>>,
      logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
      prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, ...>>,
      block_number: 1,
      gas_limit: 30000000,
      gas_used: 0,
      timestamp: 6,
      extra_data: "",
      base_fee_per_gas: 1000000000,
      block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26,
        250, 150, 57, 48, 204, 247, 4, 37, 12, ...>>,
      transactions: [],
      withdrawals: []
    },
    bls_to_execution_changes: []
  }
}
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_proposer_index/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_in_activation_queue/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_in_activation_queue/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<177, 70, 172, 123, 249, 42, 128, 238, 210, 180, 193, 8, 101, 143,
    0, 240, 73, 99, 35, 74, 141, 113, 112, 69, 158, 130, 218, 43, 217, 3, 82,
    21, 45, 221, 138, 13, 47, 0, 11, 190, 154, 22, 205, 173, 52, 189, 240, 158,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_in_activation_queue/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_prev_randao_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_prev_randao_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_prev_randao_first_payload/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_committee_signature/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_committee_signature/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 1,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_committee_signature/post.ssz_snappy
✅ post
...........................file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_proposer_slashed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_proposer_slashed/block.ssz_snappy
block_header before deserializing Elixir.SszTypes.BeaconBlock
✅ operation
%SszTypes.BeaconBlock{
  slot: 1,
  proposer_index: 63,
  parent_root: <<7, 123, 221, 12, 12, 92, 109, 173, 42, 17, 183, 210, 159, 77,
    93, 159, 58, 241, 225, 187, 17, 131, 160, 225, 114, 156, 213, 156, 231, 8,
    163, 161>>,
  state_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  body: %SszTypes.BeaconBlockBody{
    randao_reveal: <<137, 85, 125, 30, 107, 185, 57, 85, 62, 17, 39, 234, 210,
      192, 75, 131, 87, 222, 191, 229, 115, 179, 109, 50, 93, 38, 251, 60, 30,
      62, 217, 133, 176, 165, 243, 79, 128, 64, 90, 162, 189, 54, 45, 29, ...>>,
    eth1_data: %SszTypes.Eth1Data{
      deposit_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      deposit_count: 64,
      block_hash: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>
    },
    graffiti: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    proposer_slashings: [],
    attester_slashings: [],
    attestations: [],
    deposits: [],
    voluntary_exits: [],
    sync_aggregate: %SszTypes.SyncAggregate{
      sync_committee_bits: <<0, 0, 0, 0>>,
      sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
    },
    execution_payload: %SszTypes.ExecutionPayload{
      parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77,
        47, 243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194,
        17, 168, 42>>,
      fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0>>,
      state_root: "                                ",
      receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103,
        182, 204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66,
        253, 64, 212, 147, ...>>,
      logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
      prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, ...>>,
      block_number: 1,
      gas_limit: 30000000,
      gas_used: 0,
      timestamp: 6,
      extra_data: "",
      base_fee_per_gas: 1000000000,
      block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26,
        250, 150, 57, 48, 204, 247, 4, 37, 12, ...>>,
      transactions: [],
      withdrawals: []
    },
    bls_to_execution_changes: []
  }
}
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_proposer_slashed/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_bad_replaced_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_bad_replaced_index/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 34],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_bad_replaced_index/post.ssz_snappy
✅ post
......file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_all_fully_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_all_fully_withdrawable/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<94, 76, 63, 74, 181, 215, 177, 74, 240, 25, 42, 204, 4, 89, 27,
    181, 191, 98, 13, 91, 200, 114, 141, 252, 25, 248, 243, 123, 197, 226, 141,
    254>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_all_fully_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
...............file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_not_active/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_not_active/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 0, validator_index: 0},
  signature: <<149, 212, 181, 230, 44, 147, 62, 246, 194, 145, 9, 40, 144, 83,
    134, 116, 66, 102, 43, 242, 207, 202, 28, 220, 50, 50, 28, 194, 91, 130,
    118, 60, 120, 184, 157, 13, 166, 32, 47, 56, 138, 209, 160, 52, 248, 66,
    153, 20, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_not_active/post.ssz_snappy
✅ post
.....................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_infinite_signature_with_all_participants/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_infinite_signature_with_all_participants/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_infinite_signature_with_all_participants/post.ssz_snappy
✅ post
..............file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_duplicate_index_normal_signed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_duplicate_index_normal_signed/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 15, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<152, 150, 125, 98, 235, 248, 248, 43, 12, 66, 253, 202, 160,
      63, 14, 41, 84, 189, 205, 225, 29, 204, 3, 228, 105, 92, 138, 163, 199,
      177, 20, 144, 101, 109, 0, 231, 119, 110, 247, 18, 226, 151, 44, 80, 33,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_duplicate_index_normal_signed/post.ssz_snappy
✅ post
..........file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_max/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_max/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<185, 127, 149, 231, 100, 189, 154, 47, 204, 89, 53, 192, 20,
      225, 214, 91, 76, 31, 141, 76, 16, 72, 34, 216, 56, 190, 158, 187, 88, 61,
      32, 139, 22, 136, 125, 192, 146, 179, 16, 87, 249, 119, 188, 23, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_max/post.ssz_snappy
post before deserializing BeaconState
✅ post
...file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_past_timestamp_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_past_timestamp_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_past_timestamp_regular_payload/post.ssz_snappy
✅ post
....file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/block_header_from_future/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/block_header_from_future/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 5,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<181, 64, 59, 207, 235, 27, 193, 58, 146, 113, 151, 126, 219,
      125, 197, 15, 104, 201, 60, 238, 70, 159, 207, 127, 104, 105, 59, 67, 199,
      85, 200, 117, 85, 110, 241, 157, 174, 230, 138, 143, 105, 227, 109, 147,
      85, 168, 200, ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 5,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<183, 146, 47, 209, 154, 216, 189, 158, 218, 50, 119, 216, 7,
      169, 10, 121, 239, 131, 32, 208, 43, 8, 36, 178, 138, 28, 239, 126, 36,
      245, 244, 56, 59, 136, 129, 253, 11, 221, 236, 115, 73, 84, 195, 171, 206,
      48, ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/block_header_from_future/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_current_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_current_fork_version/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<171, 156, 253, 28, 193, 135, 70, 55, 123, 67, 84, 82, 27, 114,
    166, 180, 170, 230, 16, 76, 161, 158, 209, 192, 59, 71, 133, 24, 247, 32,
    186, 93, 74, 133, 75, 44, 213, 188, 191, 94, 249, 63, 176, 40, 252, 158,
    168, 5, ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_current_fork_version/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/deposit/pyspec_tests/correct_sig_but_forked_state/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/correct_sig_but_forked_state/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<185, 127, 149, 231, 100, 189, 154, 47, 204, 89, 53, 192, 20,
      225, 214, 91, 76, 31, 141, 76, 16, 72, 34, 216, 56, 190, 158, 187, 88, 61,
      32, 139, 22, 136, 125, 192, 146, 179, 16, 87, 249, 119, 188, 23, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/correct_sig_but_forked_state/post.ssz_snappy
post before deserializing BeaconState
✅ post
....file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_future_target_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_future_target_epoch/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 1
    }
  },
  signature: <<132, 36, 227, 143, 138, 157, 78, 95, 27, 191, 67, 250, 143, 91,
    169, 204, 142, 16, 131, 23, 72, 210, 170, 233, 138, 155, 96, 34, 161, 105,
    41, 101, 114, 55, 247, 51, 131, 255, 201, 124, 97, 156, 36, 217, 40, 45,
    105, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_future_target_epoch/post.ssz_snappy
✅ post
...............file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_bad_extra_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_bad_extra_index/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33, 34],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_bad_extra_index/post.ssz_snappy
✅ post
........................................file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_over_max/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_over_max/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000001,
    signature: <<163, 178, 204, 114, 104, 222, 49, 223, 54, 76, 81, 99, 186,
      231, 218, 119, 221, 43, 10, 25, 15, 210, 167, 229, 79, 61, 36, 253, 142,
      149, 110, 204, 71, 174, 185, 136, 1, 53, 250, 73, 201, 223, 137, 143,
      ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_over_max/post.ssz_snappy
post before deserializing BeaconState
✅ post
............file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_bad_replaced_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_bad_replaced_index/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 34],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_bad_replaced_index/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_previous_source_root/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_previous_source_root/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 33,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: "22222222222222222222222222222222",
      epoch: 3
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 4
    }
  },
  signature: <<131, 222, 215, 250, 13, 176, 180, 176, 97, 8, 102, 152, 106, 135,
    194, 141, 152, 208, 251, 89, 146, 27, 237, 169, 12, 50, 71, 246, 1, 95, 158,
    5, 42, 53, 194, 250, 68, 125, 88, 255, 24, 121, 207, 148, 7, 116, 44, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_previous_source_root/post.ssz_snappy
✅ post
..............file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/attestation_from_future/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/attestation_from_future/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [0, 4, 13, 20],
    data: %SszTypes.AttestationData{
      slot: 5,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<139, 23, 36, 4, 81, 117, 50, 253, 131, 112, 175, 31, 112, 236,
      153, 87, 149, 168, 55, 138, 31, 51, 53, 187, 90, 6, 195, 124, 137, 106,
      233, 129, 147, 255, 224, 159, 6, 210, 86, 120, 12, 226, 199, 201, 14, 233,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [0, 4, 13, 20],
    data: %SszTypes.AttestationData{
      slot: 5,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<170, 27, 167, 176, 215, 180, 243, 170, 35, 167, 24, 227, 55,
      20, 65, 209, 218, 188, 41, 241, 80, 95, 107, 144, 103, 27, 72, 49, 79, 21,
      26, 62, 115, 73, 104, 234, 98, 168, 158, 24, 28, 220, 138, 162, 200, ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/attestation_from_future/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_slot_0/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_slot_0/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 3,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_wrong_index_for_slot_0/post.ssz_snappy
✅ post
..............................................file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_incorrect_signature/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_incorrect_signature/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 0},
  signature: <<167, 221, 249, 222, 239, 78, 214, 62, 153, 205, 57, 247, 146,
    241, 53, 120, 130, 2, 131, 197, 185, 25, 229, 51, 205, 177, 81, 251, 28,
    151, 118, 44, 135, 23, 175, 83, 157, 3, 18, 4, 128, 210, 128, 224, 251, 123,
    37, 134, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_incorrect_signature/post.ssz_snappy
✅ post
..file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_fully_withdrawable_too_few_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_fully_withdrawable_too_few_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_fully_withdrawable_too_few_in_withdrawals/post.ssz_snappy
✅ post
................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_4/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_4/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<248, 121, 165, 90, 78, 55, 155, 122, 5, 232, 106, 91, 254, 173,
    126, 15, 172, 72, 45, 121, 60, 161, 173, 208, 121, 212, 36, 233, 216, 164,
    151, 158>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 40,
      address: <<89, 139, 185, 58, 168, 246, 218, 189, 3, 3, 31, 5, 114, 98,
        217, 183, 116, 81, 158, 130>>,
      amount: 513336200
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 41,
      address: <<18, 148, 40, 102, 95, 145, 102, 179, 54, 41, 151, 107, 156,
        212, 4, 23, 116, 87, 88, 33>>,
      amount: 32296293784
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 42,
      address: <<156, 244, 42, 169, 84, 71, 113, 1, 115, 134, 197, 150, 47, 54,
        207, 91, 185, 153, 115, 163>>,
      amount: 955804578
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 43,
      address: <<174, 198, 123, 80, 40, 254, 181, 106, 229, 64, 9, 73, 212, 47,
        117, 7, 65, 207, 159, 106>>,
      amount: 320803993
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_4/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_mismatched_target_and_slot/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_mismatched_target_and_slot/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 8,
    index: 0,
    beacon_block_root: <<3, 52, 95, 228, 93, 119, 163, 151, 188, 53, 202, 59,
      142, 71, 133, 22, 47, 221, 151, 232, 168, 132, 208, 53, 7, 143, 25, 69,
      31, 109, 223, 27>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<3, 52, 95, 228, 93, 119, 163, 151, 188, 53, 202, 59, 142, 71, 133,
        22, 47, 221, 151, 232, 168, 132, 208, 53, 7, 143, 25, 69, 31, 109, 223,
        27>>,
      epoch: 2
    }
  },
  signature: <<179, 226, 142, 89, 139, 89, 175, 245, 148, 190, 117, 151, 138,
    165, 7, 201, 190, 54, 148, 227, 55, 200, 109, 98, 228, 71, 81, 141, 65, 84,
    24, 14, 50, 245, 202, 60, 100, 124, 91, 127, 28, 48, 225, 49, 227, 99, 137,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_mismatched_target_and_slot/post.ssz_snappy
✅ post
.......................................................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_extra_participant/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_extra_participant/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<140, 238, 255, 234, 172, 25, 31, 85, 102, 212,
    219, 218, 255, 231, 199, 74, 175, 241, 181, 22, 1, 92, 86, 105, 106, 41, 62,
    170, 211, 207, 43, 131, 125, 168, 214, 226, 1, 240, 88, 89, 100, 53, 252,
    137, 15, 145, 107, 2, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_extra_participant/post.ssz_snappy
✅ post
.............file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_exit_in_future/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_exit_in_future/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 65, validator_index: 0},
  signature: <<161, 9, 199, 181, 42, 14, 149, 126, 103, 165, 244, 141, 234, 235,
    92, 64, 38, 201, 232, 27, 215, 62, 116, 153, 0, 137, 111, 185, 41, 26, 58,
    207, 67, 179, 219, 196, 174, 126, 245, 230, 206, 111, 73, 40, 3, 153, 112,
    45, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_exit_in_future/post.ssz_snappy
✅ post
.......................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_effective_balance_0_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_effective_balance_0_balance/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<112, 67, 68, 255, 104, 105, 29, 145, 14, 15, 107, 13, 32, 76,
    154, 254, 158, 221, 150, 24, 56, 252, 93, 138, 170, 0, 185, 199, 42, 118,
    253, 189>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_effective_balance_0_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
..........file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_old_target_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_old_target_epoch/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_old_target_epoch/post.ssz_snappy
✅ post
...........file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_min_inclusion_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_min_inclusion_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_min_inclusion_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
..file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_min_inclusion_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_min_inclusion_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<138, 178, 99, 20, 20, 253, 49, 193, 153, 93, 21, 184, 62, 86, 17,
    82, 139, 128, 247, 162, 115, 228, 228, 96, 2, 117, 56, 57, 91, 173, 149, 86,
    191, 183, 31, 218, 120, 126, 0, 145, 216, 144, 134, 99, 197, 166, 75, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_min_inclusion_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
.............................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_all_empty_indices/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_all_empty_indices/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_all_empty_indices/post.ssz_snappy
✅ post
..file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_current_fork_version_is_before_fork_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_current_fork_version_is_before_fork_epoch/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 0, validator_index: 0},
  signature: <<149, 212, 181, 230, 44, 147, 62, 246, 194, 145, 9, 40, 144, 83,
    134, 116, 66, 102, 43, 242, 207, 202, 28, 220, 50, 50, 28, 194, 91, 130,
    118, 60, 120, 184, 157, 13, 166, 32, 47, 56, 138, 209, 160, 52, 248, 66,
    153, 20, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_current_fork_version_is_before_fork_epoch/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_max_per_slot_full_withdrawals_and_one_less_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_max_per_slot_full_withdrawals_and_one_less_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_max_per_slot_full_withdrawals_and_one_less_in_withdrawals/post.ssz_snappy
✅ post
...................................file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_sig_top_up/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_sig_top_up/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140, 79, 169,
      172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63, 23, 27,
      172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10, 219, 34,
      198, ...>>,
    withdrawal_credentials: <<0, 207, 71, 138, 67, 24, 55, 114, 141, 206, 195,
      70, 31, 79, 83, 184, 116, 156, 220, 78, 3, 73, 109, 202, 237, 69, 157,
      234, 130, 184, 46, 184>>,
    amount: 8000000000,
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_sig_top_up/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_previous_fork_version_not_is_before_fork_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_previous_fork_version_not_is_before_fork_epoch/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 1, validator_index: 0},
  signature: <<168, 227, 166, 58, 243, 101, 186, 191, 232, 1, 112, 169, 168, 64,
    72, 182, 8, 134, 33, 27, 210, 190, 16, 162, 110, 68, 157, 69, 180, 169, 110,
    112, 210, 215, 156, 216, 160, 10, 229, 129, 245, 39, 83, 187, 115, 171, 4,
    226, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_previous_fork_version_not_is_before_fork_epoch/post.ssz_snappy
✅ post
..file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_active_and_slashed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_active_and_slashed/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<130, 199, 135, 70, 165, 226, 82, 167, 194, 237, 222, 164, 240,
    198, 76, 41, 254, 79, 56, 151, 1, 237, 84, 238, 111, 86, 27, 203, 115, 166,
    140, 252>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_active_and_slashed/post.ssz_snappy
post before deserializing BeaconState
✅ post
...file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_no_participants/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_no_participants/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<0, 0, 0, 0>>,
  sync_committee_signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_no_participants/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_of_many_incorrectly_partial/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_of_many_incorrectly_partial/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<209, 152, 32, 132, 144, 0, 143, 199, 111, 51, 151, 64, 50, 166,
    124, 170, 134, 176, 132, 54, 180, 78, 8, 163, 128, 109, 146, 92, 53, 82, 7,
    205>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 2,
      address: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153>>,
      amount: 1004000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_of_many_incorrectly_partial/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_effective_balance_nonzero_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_effective_balance_nonzero_balance/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<143, 239, 39, 163, 58, 226, 58, 153, 59, 36, 65, 21, 139, 13,
    235, 238, 143, 184, 42, 105, 221, 85, 64, 45, 254, 198, 230, 154, 85, 85,
    117, 119>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 100000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_effective_balance_nonzero_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/zero_length_transaction_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/zero_length_transaction_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/zero_length_transaction_first_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................................file path: tests/minimal/capella/operations/attestation/pyspec_tests/one_basic_attestation/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/one_basic_attestation/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/one_basic_attestation/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_too_many_aggregation_bits/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_too_many_aggregation_bits/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: "/",
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_too_many_aggregation_bits/post.ssz_snappy
✅ post
..................file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__zero_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__zero_balance/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140, 79, 169,
      172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63, 23, 27,
      172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10, 219, 34,
      198, ...>>,
    withdrawal_credentials: <<0, 207, 71, 138, 67, 24, 55, 114, 141, 206, 195,
      70, 31, 79, 83, 184, 116, 156, 220, 78, 3, 73, 109, 202, 237, 69, 157,
      234, 130, 184, 46, 184>>,
    amount: 8000000000,
    signature: <<135, 142, 124, 91, 157, 32, 251, 93, 62, 255, 200, 74, 146,
      209, 197, 96, 21, 143, 217, 6, 49, 96, 51, 58, 248, 22, 200, 106, 95, 149,
      84, 35, 94, 64, 104, 133, 251, 189, 124, 103, 152, 173, 109, 87, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__zero_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................................................................file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/success_exit_queue__scaled_churn/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/success_exit_queue__scaled_churn/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 191},
  signature: <<174, 254, 162, 148, 196, 61, 48, 75, 121, 207, 205, 173, 114,
    141, 110, 198, 173, 154, 200, 251, 120, 9, 233, 15, 143, 74, 10, 143, 29,
    144, 61, 187, 43, 252, 213, 249, 36, 55, 61, 72, 58, 138, 119, 245, 53, 209,
    241, 100, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/success_exit_queue__scaled_churn/post.ssz_snappy
post before deserializing BeaconState
✅ post
...................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/all_withdrawal/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/all_withdrawal/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<214, 2, 184, 197, 155, 235, 29, 8, 43, 74, 129, 22, 31, 209,
    192, 188, 50, 153, 190, 235, 141, 180, 116, 139, 135, 59, 231, 245, 114,
    158, 162, 134>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/all_withdrawal/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_max_per_slot_partial_withdrawals_and_one_less_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_max_per_slot_partial_withdrawals_and_one_less_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_max_per_slot_partial_withdrawals_and_one_less_in_withdrawals/post.ssz_snappy
✅ post
..........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_amount_full/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_amount_full/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<237, 164, 215, 85, 231, 23, 103, 126, 59, 165, 112, 161, 160,
    222, 41, 13, 122, 83, 169, 53, 211, 26, 53, 227, 143, 26, 171, 187, 160,
    210, 175, 88>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 4,
      address: <<2, 243, 231, 199, 189, 84, 140, 177, 182, 28, 38, 214, 129, 33,
        1, 206, 221, 62, 198, 112>>,
      amount: 32000000001
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_amount_full/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_previous_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_previous_fork_version/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<172, 94, 109, 37, 98, 166, 226, 185, 52, 222, 189, 200, 209,
      51, 174, 109, 54, 139, 197, 240, 190, 167, 165, 44, 211, 213, 217, 248,
      64, 9, 95, 55, 77, 131, 138, 86, 242, 240, 16, 135, 168, 216, 41, 89,
      ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_previous_fork_version/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....................file path: tests/minimal/capella/operations/deposit/pyspec_tests/invalid_bad_merkle_proof/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/invalid_bad_merkle_proof/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<185, 127, 149, 231, 100, 189, 154, 47, 204, 89, 53, 192, 20,
      225, 214, 91, 76, 31, 141, 76, 16, 72, 34, 216, 56, 190, 158, 187, 88, 61,
      32, 139, 22, 136, 125, 192, 146, 179, 16, 87, 249, 119, 188, 23, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/invalid_bad_merkle_proof/post.ssz_snappy
✅ post
..file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_withdrawable/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 4,
    from_bls_pubkey: <<183, 68, 81, 102, 15, 103, 139, 114, 135, 168, 245, 254,
      23, 198, 7, 155, 83, 106, 34, 112, 224, 144, 233, 170, 214, 35, 131, 237,
      3, 46, 82, 96, 37, 22, 151, 103, 102, 48, 81, 56, 52, 8, 115, 171, 88,
      253, 63, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<128, 112, 74, 111, 46, 53, 130, 110, 134, 65, 201, 13, 51, 221,
    68, 10, 204, 28, 31, 193, 156, 114, 190, 253, 21, 76, 109, 209, 120, 142, 8,
    96, 203, 13, 1, 84, 29, 9, 173, 113, 163, 189, 233, 119, 202, 251, 13, 68,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_max_partial_withdrawable/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_max_partial_withdrawable/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<243, 57, 149, 87, 115, 200, 113, 0, 87, 95, 20, 148, 155, 191,
    194, 206, 21, 193, 15, 86, 72, 47, 27, 255, 127, 253, 4, 139, 175, 95, 61,
    78>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_max_partial_withdrawable/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_val_index_out_of_range/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_val_index_out_of_range/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 64,
    from_bls_pubkey: <<171, 80, 151, 83, 75, 196, 153, 84, 209, 105, 183, 192,
      4, 7, 112, 76, 82, 247, 99, 175, 36, 148, 0, 30, 206, 27, 131, 237, 166,
      154, 125, 216, 146, 42, 239, 168, 180, 170, 170, 158, 78, 26, 176, 164,
      123, 46, 104, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<138, 52, 137, 17, 236, 189, 47, 194, 61, 129, 160, 42, 0, 59, 4,
    123, 142, 249, 190, 219, 15, 75, 222, 210, 245, 39, 74, 250, 110, 181, 173,
    190, 190, 152, 69, 102, 128, 185, 105, 232, 42, 144, 141, 93, 197, 134, 209,
    162, ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_val_index_out_of_range/post.ssz_snappy
✅ post
..................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<177, 70, 172, 123, 249, 42, 128, 238, 210, 180, 193, 8, 101, 143,
    0, 240, 73, 99, 35, 74, 141, 113, 112, 69, 158, 130, 218, 43, 217, 3, 82,
    21, 45, 221, 138, 13, 47, 0, 11, 190, 154, 22, 205, 173, 52, 189, 240, 158,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_genesis_validators_root/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_genesis_validators_root/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<143, 164, 216, 112, 250, 236, 213, 56, 83, 8, 196, 133, 107, 165,
    246, 99, 205, 123, 197, 103, 226, 248, 185, 129, 102, 67, 16, 120, 166, 140,
    244, 51, 6, 169, 51, 248, 51, 221, 139, 27, 202, 20, 161, 157, 118, 230,
    162, 159, ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_genesis_validators_root/post.ssz_snappy
✅ post
.........................................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_not_activated/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_not_activated/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<177, 70, 172, 123, 249, 42, 128, 238, 210, 180, 193, 8, 101, 143,
    0, 240, 73, 99, 35, 74, 141, 113, 112, 69, 158, 130, 218, 43, 217, 3, 82,
    21, 45, 221, 138, 13, 47, 0, 11, 190, 154, 22, 205, 173, 52, 189, 240, 158,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_not_activated/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_multiple_blocks_single_slot/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_multiple_blocks_single_slot/block.ssz_snappy
block_header before deserializing Elixir.SszTypes.BeaconBlock
✅ operation
%SszTypes.BeaconBlock{
  slot: 1,
  proposer_index: 63,
  parent_root: <<145, 118, 69, 26, 229, 140, 187, 195, 50, 241, 30, 195, 129,
    64, 33, 245, 202, 175, 192, 206, 197, 9, 216, 240, 39, 65, 191, 222, 220,
    61, 70, 6>>,
  state_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  body: %SszTypes.BeaconBlockBody{
    randao_reveal: <<137, 85, 125, 30, 107, 185, 57, 85, 62, 17, 39, 234, 210,
      192, 75, 131, 87, 222, 191, 229, 115, 179, 109, 50, 93, 38, 251, 60, 30,
      62, 217, 133, 176, 165, 243, 79, 128, 64, 90, 162, 189, 54, 45, 29, ...>>,
    eth1_data: %SszTypes.Eth1Data{
      deposit_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      deposit_count: 64,
      block_hash: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>
    },
    graffiti: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    proposer_slashings: [],
    attester_slashings: [],
    attestations: [],
    deposits: [],
    voluntary_exits: [],
    sync_aggregate: %SszTypes.SyncAggregate{
      sync_committee_bits: <<0, 0, 0, 0>>,
      sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
    },
    execution_payload: %SszTypes.ExecutionPayload{
      parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77,
        47, 243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194,
        17, 168, 42>>,
      fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0>>,
      state_root: "                                ",
      receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103,
        182, 204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66,
        253, 64, 212, 147, ...>>,
      logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
      prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, ...>>,
      block_number: 1,
      gas_limit: 30000000,
      gas_used: 0,
      timestamp: 6,
      extra_data: "",
      base_fee_per_gas: 1000000000,
      block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26,
        250, 150, 57, 48, 204, 247, 4, 37, 12, ...>>,
      transactions: [],
      withdrawals: []
    },
    bls_to_execution_changes: []
  }
}
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_multiple_blocks_single_slot/post.ssz_snappy
✅ post
...............file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_unsorted_att_1/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_unsorted_att_1/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 30, 15, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_unsorted_att_1/post.ssz_snappy
✅ post
.............................................................................................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_unsorted_att_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_unsorted_att_2/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 30, 15, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_unsorted_att_2/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_parent_hash_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_parent_hash_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_parent_hash_regular_payload/post.ssz_snappy
✅ post
....................file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_old_source_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_old_source_epoch/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 25,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 2
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 3
    }
  },
  signature: <<184, 7, 220, 109, 232, 46, 23, 62, 115, 77, 33, 32, 227, 207, 14,
    227, 244, 179, 127, 101, 2, 248, 47, 152, 80, 80, 203, 124, 123, 177, 242,
    57, 219, 83, 166, 241, 106, 141, 73, 121, 223, 171, 243, 184, 50, 193, 13,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_old_source_epoch/post.ssz_snappy
✅ post
...................file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__less_effective_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__less_effective_balance/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140, 79, 169,
      172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63, 23, 27,
      172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10, 219, 34,
      198, ...>>,
    withdrawal_credentials: <<0, 207, 71, 138, 67, 24, 55, 114, 141, 206, 195,
      70, 31, 79, 83, 184, 116, 156, 220, 78, 3, 73, 109, 202, 237, 69, 157,
      234, 130, 184, 46, 184>>,
    amount: 8000000000,
    signature: <<135, 142, 124, 91, 157, 32, 251, 93, 62, 255, 200, 74, 146,
      209, 197, 96, 21, 143, 217, 6, 49, 96, 51, 58, 248, 22, 200, 106, 95, 149,
      84, 35, 94, 64, 104, 133, 251, 189, 124, 103, 152, 173, 109, 87, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__less_effective_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_withdrawn/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_withdrawn/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_withdrawn/post.ssz_snappy
✅ post
....................................file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_parent_root/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_parent_root/block.ssz_snappy
block_header before deserializing Elixir.SszTypes.BeaconBlock
✅ operation
%SszTypes.BeaconBlock{
  slot: 1,
  proposer_index: 63,
  parent_root: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  state_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  body: %SszTypes.BeaconBlockBody{
    randao_reveal: <<137, 85, 125, 30, 107, 185, 57, 85, 62, 17, 39, 234, 210,
      192, 75, 131, 87, 222, 191, 229, 115, 179, 109, 50, 93, 38, 251, 60, 30,
      62, 217, 133, 176, 165, 243, 79, 128, 64, 90, 162, 189, 54, 45, 29, ...>>,
    eth1_data: %SszTypes.Eth1Data{
      deposit_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      deposit_count: 64,
      block_hash: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>
    },
    graffiti: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    proposer_slashings: [],
    attester_slashings: [],
    attestations: [],
    deposits: [],
    voluntary_exits: [],
    sync_aggregate: %SszTypes.SyncAggregate{
      sync_committee_bits: <<0, 0, 0, 0>>,
      sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
    },
    execution_payload: %SszTypes.ExecutionPayload{
      parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77,
        47, 243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194,
        17, 168, 42>>,
      fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0>>,
      state_root: "                                ",
      receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103,
        182, 204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66,
        253, 64, 212, 147, ...>>,
      logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
      prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, ...>>,
      block_number: 1,
      gas_limit: 30000000,
      gas_used: 0,
      timestamp: 6,
      extra_data: "",
      base_fee_per_gas: 1000000000,
      block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26,
        250, 150, 57, 48, 204, 247, 4, 37, 12, ...>>,
      transactions: [],
      withdrawals: []
    },
    bls_to_execution_changes: []
  }
}
file path: tests/minimal/capella/operations/block_header/pyspec_tests/invalid_parent_root/post.ssz_snappy
✅ post
....file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_head_included_after_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_head_included_after_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<138, 178, 99, 20, 20, 253, 49, 193, 153, 93, 21, 184, 62, 86, 17,
    82, 139, 128, 247, 162, 115, 228, 228, 96, 2, 117, 56, 57, 91, 173, 149, 86,
    191, 183, 31, 218, 120, 126, 0, 145, 216, 144, 134, 99, 197, 166, 75, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_head_included_after_epoch_delay/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_source_root_is_target_root/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_source_root_is_target_root/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<176, 22, 80, 68, 151, 119, 8, 243, 104, 94, 33, 24, 245, 15, 182,
    74, 77, 27, 239, 46, 87, 170, 15, 163, 203, 254, 73, 42, 216, 5, 27, 155,
    97, 123, 162, 141, 32, 60, 22, 88, 110, 148, 184, 250, 117, 59, 202, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_source_root_is_target_root/post.ssz_snappy
✅ post
.....file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_randomized_non_validated_execution_fields_regular_payload__execution_invalid/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_randomized_non_validated_execution_fields_regular_payload__execution_invalid/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_randomized_non_validated_execution_fields_regular_payload__execution_invalid/post.ssz_snappy
✅ post
..........................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_no_double_or_surround/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_no_double_or_surround/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 1
      }
    },
    signature: <<132, 36, 227, 143, 138, 157, 78, 95, 27, 191, 67, 250, 143, 91,
      169, 204, 142, 16, 131, 23, 72, 210, 170, 233, 138, 155, 96, 34, 161, 105,
      41, 101, 114, 55, 247, 51, 131, 255, 201, 124, 97, 156, 36, 217, 40, 45,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_no_double_or_surround/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_everything_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_everything_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_bad_everything_regular_payload/post.ssz_snappy
✅ post
....file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_headers_are_same_sigs_are_different/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_headers_are_same_sigs_are_different/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_headers_are_same_sigs_are_different/post.ssz_snappy
✅ post
.................................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/with_effective_balance_disparity/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/with_effective_balance_disparity/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [0, 10, 22, 35, 43, 63],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<196, 71, 228, 129, 29, 22, 140, 117, 151, 98, 159,
        238, 212, 206, 248, 163, 220, 113, 225, 22, 62, 60, 17, 167, 33, 14,
        152, 86, 121, 143, 59, 65>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<196, 71, 228, 129, 29, 22, 140, 117, 151, 98, 159, 238, 212,
          206, 248, 163, 220, 113, 225, 22, 62, 60, 17, 167, 33, 14, 152, 86,
          121, 143, 59, 65>>,
        epoch: 0
      }
    },
    signature: <<145, 236, 96, 173, 163, 144, 4, 108, 161, 239, 229, 162, 55,
      184, 48, 58, 39, 172, 171, 126, 141, 11, 221, 17, 165, 202, 121, 48, 219,
      211, 39, 151, 173, 29, 117, 32, 103, 233, 123, 192, 20, 133, 32, 119, 108,
      139, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [0, 10, 22, 35, 43, 63],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<196, 71, 228, 129, 29, 22, 140, 117, 151, 98, 159,
        238, 212, 206, 248, 163, 220, 113, 225, 22, 62, 60, 17, 167, 33, 14,
        152, 86, 121, 143, 59, 65>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<172, 61, 123, 150, 72, 252, 95, 167, 86, 117, 137, 142, 181, 7,
      79, 87, 132, 236, 213, 85, 115, 174, 179, 71, 21, 13, 196, 229, 67, 66,
      175, 171, 134, 249, 83, 232, 48, 136, 74, 7, 126, 244, 35, 168, 230, ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/with_effective_balance_disparity/post.ssz_snappy
post before deserializing BeaconState
✅ post
............................file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_index/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 4,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_index/post.ssz_snappy
✅ post
...............................................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_0/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_0/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<222, 87, 145, 164, 134, 122, 186, 58, 144, 251, 1, 148, 206, 59,
    78, 219, 144, 175, 166, 193, 149, 213, 201, 56, 201, 18, 239, 167, 251, 131,
    144, 92>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 20,
      address: <<115, 209, 165, 31, 234, 28, 6, 116, 35, 66, 124, 237, 79, 106,
        98, 59, 211, 206, 69, 210>>,
      amount: 32715660902
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 21,
      address: <<105, 154, 35, 216, 8, 185, 236, 12, 3, 20, 19, 40, 119, 202,
        67, 106, 86, 45, 223, 140>>,
      amount: 836869775
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 22,
      address: <<208, 68, 146, 149, 255, 29, 145, 9, 100, 244, 54, 160, 141, 69,
        53, 214, 112, 144, 174, 188>>,
      amount: 246590433
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 23,
      address: <<28, 208, 53, 166, 166, 172, 124, 51, 126, 119, 28, 13, 24, 22,
        151, 95, 75, 203, 236, 177>>,
      amount: 457382065
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_0/post.ssz_snappy
post before deserializing BeaconState
✅ post
......................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_first_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_in_exit_queue/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_in_exit_queue/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 3,
    from_bls_pubkey: <<134, 88, 176, 197, 209, 49, 82, 61, 205, 187, 222, 153,
      98, 202, 240, 116, 84, 134, 75, 221, 75, 206, 33, 178, 119, 234, 169, 184,
      76, 100, 116, 0, 113, 175, 215, 45, 142, 130, 6, 123, 181, 163, 12, 133,
      237, 10, 130, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<176, 79, 79, 81, 119, 0, 193, 220, 198, 246, 162, 70, 113, 169,
    173, 217, 37, 120, 121, 48, 235, 119, 44, 183, 42, 72, 69, 231, 10, 182, 43,
    50, 101, 52, 107, 46, 54, 239, 61, 230, 43, 204, 157, 196, 84, 218, 78, 156,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_in_exit_queue/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......file path: tests/minimal/capella/operations/attestation/pyspec_tests/previous_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/previous_epoch/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/previous_epoch/post.ssz_snappy
post before deserializing BeaconState
✅ post
..file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_not_yet_active/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_not_yet_active/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<130, 199, 135, 70, 165, 226, 82, 167, 194, 237, 222, 164, 240,
    198, 76, 41, 254, 79, 56, 151, 1, 237, 84, 238, 111, 86, 27, 203, 115, 166,
    140, 252>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_not_yet_active/post.ssz_snappy
post before deserializing BeaconState
✅ post
...file path: tests/minimal/capella/operations/attestation/pyspec_tests/multi_proposer_index_iterations/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/multi_proposer_index_iterations/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 16,
    index: 0,
    beacon_block_root: <<103, 140, 136, 63, 31, 213, 193, 145, 186, 2, 77, 149,
      167, 65, 252, 108, 160, 239, 177, 143, 8, 197, 218, 168, 146, 99, 153,
      161, 156, 203, 11, 53>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<103, 140, 136, 63, 31, 213, 193, 145, 186, 2, 77, 149, 167, 65,
        252, 108, 160, 239, 177, 143, 8, 197, 218, 168, 146, 99, 153, 161, 156,
        203, 11, 53>>,
      epoch: 2
    }
  },
  signature: <<178, 158, 218, 115, 147, 41, 86, 50, 144, 101, 15, 203, 49, 42,
    29, 39, 126, 218, 58, 205, 74, 53, 249, 85, 203, 190, 253, 15, 95, 71, 38,
    234, 103, 157, 49, 22, 84, 119, 71, 75, 95, 136, 251, 9, 233, 95, 245, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/multi_proposer_index_iterations/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_not_active_long_enough/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_not_active_long_enough/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 0, validator_index: 0},
  signature: <<149, 212, 181, 230, 44, 147, 62, 246, 194, 145, 9, 40, 144, 83,
    134, 116, 66, 102, 43, 242, 207, 202, 28, 220, 50, 50, 28, 194, 91, 130,
    118, 60, 120, 184, 157, 13, 166, 32, 47, 56, 138, 209, 160, 52, 248, 66,
    153, 20, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_validator_not_active_long_enough/post.ssz_snappy
✅ post
....file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_transactions_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_transactions_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_transactions_first_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/bad_parent_hash_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/bad_parent_hash_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/bad_parent_hash_first_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_full_withdrawal_and_none_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_full_withdrawal_and_none_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_full_withdrawal_and_none_in_withdrawals/post.ssz_snappy
✅ post
.........................................................................file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_genesis_fork_version_not_is_before_fork_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_genesis_fork_version_not_is_before_fork_epoch/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 1, validator_index: 0},
  signature: <<181, 39, 237, 170, 151, 77, 209, 156, 215, 14, 66, 95, 172, 238,
    175, 19, 122, 85, 143, 120, 198, 223, 211, 101, 49, 135, 95, 245, 132, 28,
    133, 237, 182, 39, 214, 26, 114, 206, 57, 51, 244, 26, 209, 56, 113, 64,
    173, 99, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/invalid_voluntary_exit_with_genesis_fork_version_not_is_before_fork_epoch/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_mixed_withdrawable_in_queue_too_few_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_mixed_withdrawable_in_queue_too_few_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_mixed_withdrawable_in_queue_too_few_in_withdrawals/post.ssz_snappy
✅ post
...............................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_bad_domain/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_bad_domain/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<181, 192, 2, 245, 79, 73, 104, 181, 8, 214, 26,
    187, 216, 127, 249, 86, 235, 36, 214, 91, 220, 92, 212, 117, 83, 253, 172,
    152, 215, 221, 101, 81, 224, 70, 52, 250, 202, 11, 34, 122, 68, 37, 152,
    186, 226, 4, 60, 141, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_bad_domain/post.ssz_snappy
✅ post
........................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_duplicate_index_normal_signed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_duplicate_index_normal_signed/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 6, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<138, 78, 14, 215, 163, 229, 206, 49, 239, 60, 183, 243, 70, 70,
      60, 196, 153, 233, 62, 147, 3, 45, 198, 207, 186, 69, 80, 105, 48, 19,
      221, 251, 97, 100, 53, 14, 76, 50, 219, 242, 5, 118, 87, 248, 223, 202,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_duplicate_index_normal_signed/post.ssz_snappy
✅ post
...............................................................................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_exited_and_slashed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_exited_and_slashed/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<130, 199, 135, 70, 165, 226, 82, 167, 194, 237, 222, 164, 240,
    198, 76, 41, 254, 79, 56, 151, 1, 237, 84, 238, 111, 86, 27, 203, 115, 166,
    140, 252>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_exited_and_slashed/post.ssz_snappy
post before deserializing BeaconState
✅ post
................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/basic_surround/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/basic_surround/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [2, 9, 25, 43],
    data: %SszTypes.AttestationData{
      slot: 8,
      index: 0,
      beacon_block_root: <<80, 58, 91, 94, 12, 165, 132, 143, 125, 6, 79, 157,
        21, 150, 25, 24, 11, 174, 125, 61, 108, 33, 205, 161, 232, 238, 70, 201,
        4, 255, 97, 179>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<80, 58, 91, 94, 12, 165, 132, 143, 125, 6, 79, 157, 21, 150, 25,
          24, 11, 174, 125, 61, 108, 33, 205, 161, 232, 238, 70, 201, 4, 255,
          97, 179>>,
        epoch: 2
      }
    },
    signature: <<161, 24, 24, 232, 33, 37, 193, 37, 1, 241, 157, 215, 71, 109,
      124, 112, 215, 123, 56, 29, 124, 11, 241, 72, 249, 219, 82, 13, 160, 180,
      23, 40, 4, 148, 149, 220, 66, 238, 198, 158, 9, 25, 70, 224, 218, 238,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [2, 9, 25, 43],
    data: %SszTypes.AttestationData{
      slot: 8,
      index: 0,
      beacon_block_root: <<80, 58, 91, 94, 12, 165, 132, 143, 125, 6, 79, 157,
        21, 150, 25, 24, 11, 174, 125, 61, 108, 33, 205, 161, 232, 238, 70, 201,
        4, 255, 97, 179>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 1
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 1
      }
    },
    signature: <<178, 21, 194, 105, 40, 178, 14, 214, 118, 200, 159, 162, 137,
      212, 32, 223, 132, 42, 56, 99, 185, 169, 12, 177, 6, 215, 78, 30, 169, 40,
      194, 160, 204, 63, 185, 155, 60, 221, 241, 93, 4, 80, 119, 128, 160, ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/basic_surround/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................................file path: tests/minimal/capella/operations/block_header/pyspec_tests/basic_block_header/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/block_header/pyspec_tests/basic_block_header/block.ssz_snappy
block_header before deserializing Elixir.SszTypes.BeaconBlock
✅ operation
%SszTypes.BeaconBlock{
  slot: 1,
  proposer_index: 63,
  parent_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
    27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236, 18,
    174>>,
  state_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  body: %SszTypes.BeaconBlockBody{
    randao_reveal: <<137, 85, 125, 30, 107, 185, 57, 85, 62, 17, 39, 234, 210,
      192, 75, 131, 87, 222, 191, 229, 115, 179, 109, 50, 93, 38, 251, 60, 30,
      62, 217, 133, 176, 165, 243, 79, 128, 64, 90, 162, 189, 54, 45, 29, ...>>,
    eth1_data: %SszTypes.Eth1Data{
      deposit_root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      deposit_count: 64,
      block_hash: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>
    },
    graffiti: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
    proposer_slashings: [],
    attester_slashings: [],
    attestations: [],
    deposits: [],
    voluntary_exits: [],
    sync_aggregate: %SszTypes.SyncAggregate{
      sync_committee_bits: <<0, 0, 0, 0>>,
      sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
    },
    execution_payload: %SszTypes.ExecutionPayload{
      parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77,
        47, 243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194,
        17, 168, 42>>,
      fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0>>,
      state_root: "                                ",
      receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103,
        182, 204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66,
        253, 64, 212, 147, ...>>,
      logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
      prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
        218, 218, 218, ...>>,
      block_number: 1,
      gas_limit: 30000000,
      gas_used: 0,
      timestamp: 6,
      extra_data: "",
      base_fee_per_gas: 1000000000,
      block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26,
        250, 150, 57, 48, 204, 247, 4, 37, 12, ...>>,
      transactions: [],
      withdrawals: []
    },
    bls_to_execution_changes: []
  }
}
file path: tests/minimal/capella/operations/block_header/pyspec_tests/basic_block_header/post.ssz_snappy
post before deserializing BeaconState
✅ post
........................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_nonparticipating_exited_member/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_nonparticipating_exited_member/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<239, 255, 255, 255>>,
  sync_committee_signature: <<130, 191, 140, 158, 20, 25, 12, 22, 5, 158, 135,
    167, 200, 79, 46, 136, 110, 15, 17, 212, 245, 205, 96, 1, 5, 62, 191, 61,
    53, 71, 38, 16, 66, 31, 13, 199, 163, 48, 191, 87, 125, 248, 148, 142, 52,
    27, 47, 4, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_nonparticipating_exited_member/post.ssz_snappy
post before deserializing BeaconState
✅ post
....................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_zero_expected_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_zero_expected_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_zero_expected_withdrawals/post.ssz_snappy
post before deserializing BeaconState
✅ post
.................................................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/zero_length_transaction_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/zero_length_transaction_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/zero_length_transaction_regular_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
......................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_already_0x01/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_already_0x01/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 32,
    from_bls_pubkey: <<136, 204, 143, 77, 137, 143, 126, 16, 161, 77, 182, 171,
      11, 130, 49, 207, 116, 131, 113, 216, 51, 185, 180, 147, 133, 183, 212,
      148, 175, 16, 241, 5, 94, 14, 171, 85, 156, 56, 140, 183, 136, 139, 65,
      17, 25, 134, 12, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<130, 128, 211, 135, 96, 198, 67, 155, 141, 56, 164, 113, 4, 14,
    181, 175, 216, 124, 59, 184, 31, 201, 228, 97, 135, 1, 53, 25, 191, 64, 243,
    32, 87, 144, 112, 10, 208, 155, 202, 38, 19, 194, 198, 24, 214, 206, 156,
    13, ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/invalid_already_0x01/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_past_block/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_past_block/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<162, 233, 71, 188, 187, 158, 89, 121, 233, 71,
    107, 131, 157, 33, 106, 97, 92, 109, 1, 158, 190, 61, 165, 230, 149, 123,
    54, 87, 219, 147, 231, 41, 183, 167, 160, 188, 182, 240, 97, 178, 227, 49,
    32, 67, 55, 176, 206, 217, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_past_block/post.ssz_snappy
✅ post
....file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_bad_source_root/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_bad_source_root/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<147, 151, 80, 16, 192, 242, 159, 48, 40, 118, 33, 177, 36, 127,
    41, 138, 162, 31, 151, 236, 145, 72, 20, 64, 197, 214, 25, 28, 162, 248, 55,
    134, 117, 74, 79, 185, 142, 89, 141, 159, 43, 214, 101, 192, 97, 161, 113,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_bad_source_root/post.ssz_snappy
✅ post
.........file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_empty_participants/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_empty_participants/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<0, 0, 0, 0>>,
  sync_committee_signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_empty_participants/post.ssz_snappy
post before deserializing BeaconState
✅ post
...........file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/genesis_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/genesis_fork_version/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 0,
    from_bls_pubkey: <<150, 100, 48, 29, 252, 185, 64, 83, 155, 51, 110, 107,
      33, 193, 86, 205, 163, 200, 166, 56, 71, 114, 125, 55, 73, 26, 137, 45,
      183, 244, 242, 187, 159, 201, 115, 1, 99, 37, 78, 139, 208, 40, 183, 48,
      200, 179, 147, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<177, 70, 172, 123, 249, 42, 128, 238, 210, 180, 193, 8, 101, 143,
    0, 240, 73, 99, 35, 74, 141, 113, 112, 69, 158, 130, 218, 43, 217, 3, 82,
    21, 45, 221, 138, 13, 47, 0, 11, 190, 154, 22, 205, 173, 52, 189, 240, 158,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/genesis_fork_version/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_address_full/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_address_full/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<67, 225, 46, 138, 196, 97, 97, 147, 18, 53, 155, 14, 66, 156, 2,
    154, 213, 12, 178, 39, 55, 78, 180, 26, 193, 199, 197, 193, 212, 190, 173,
    205>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 5,
      address: <<255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_address_full/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_too_few_aggregation_bits/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_too_few_aggregation_bits/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: "\t",
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<130, 34, 171, 174, 4, 92, 193, 162, 185, 174, 248, 241, 133, 251,
    2, 119, 244, 8, 6, 119, 12, 230, 148, 108, 106, 133, 16, 16, 233, 66, 138,
    90, 148, 253, 10, 153, 55, 234, 119, 46, 194, 111, 241, 199, 248, 252, 184,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_too_few_aggregation_bits/post.ssz_snappy
✅ post
.....file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/valid_signature_future_committee/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/valid_signature_future_committee/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<179, 70, 161, 81, 230, 137, 242, 27, 244, 36, 49,
    245, 67, 145, 14, 20, 230, 62, 81, 249, 181, 146, 88, 219, 20, 59, 38, 206,
    136, 184, 76, 167, 244, 138, 75, 184, 249, 215, 169, 166, 95, 243, 245, 85,
    114, 10, 212, 27, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/valid_signature_future_committee/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_target_included_after_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_target_included_after_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<142, 11, 26, 28, 39, 27, 236, 17, 148, 103, 49, 216, 28, 149, 30,
    174, 45, 214, 127, 37, 155, 26, 78, 82, 65, 199, 41, 5, 162, 113, 186, 178,
    199, 71, 128, 109, 177, 238, 143, 107, 231, 178, 6, 202, 76, 188, 127, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_incorrect_target_included_after_epoch_delay/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_different_proposer_indices/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_different_proposer_indices/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 0,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<176, 158, 146, 147, 241, 146, 33, 18, 230, 108, 102, 206, 85,
      81, 201, 2, 244, 177, 184, 60, 141, 216, 222, 202, 5, 73, 222, 238, 182,
      80, 22, 244, 95, 236, 69, 111, 161, 197, 198, 251, 96, 254, 174, 165, 179,
      136, ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_different_proposer_indices/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2/post.ssz_snappy
✅ post
................file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_min_inclusion_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_min_inclusion_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<131, 219, 207, 56, 2, 14, 226, 218, 219, 212, 38, 35, 173, 136,
    237, 54, 244, 172, 212, 20, 175, 172, 12, 99, 148, 138, 3, 105, 21, 83, 99,
    185, 81, 187, 162, 114, 165, 216, 124, 203, 181, 186, 112, 0, 74, 196, 79,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_min_inclusion_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
...........file path: tests/minimal/capella/operations/deposit/pyspec_tests/key_validate_invalid_decompression/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/key_validate_invalid_decompression/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<192, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, ...>>,
    withdrawal_credentials: <<0, 205, 150, 68, 230, 251, 255, 152, 77, 116, 7,
      158, 53, 62, 46, 139, 212, 39, 30, 137, 2, 154, 57, 66, 159, 171, 134, 46,
      68, 205, 26, 155>>,
    amount: 32000000000,
    signature: <<129, 87, 32, 184, 185, 172, 67, 40, 143, 21, 65, 153, 244, 50,
      55, 135, 76, 50, 46, 28, 245, 161, 100, 86, 195, 60, 139, 25, 172, 243, 7,
      48, 194, 207, 93, 43, 8, 142, 216, 196, 126, 174, 112, 88, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/key_validate_invalid_decompression/post.ssz_snappy
post before deserializing BeaconState
✅ post
............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_partial_withdrawal_and_none_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_partial_withdrawal_and_none_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_partial_withdrawal_and_none_in_withdrawals/post.ssz_snappy
✅ post
..............................file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__max_effective_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__max_effective_balance/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140, 79, 169,
      172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63, 23, 27,
      172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10, 219, 34,
      198, ...>>,
    withdrawal_credentials: <<0, 207, 71, 138, 67, 24, 55, 114, 141, 206, 195,
      70, 31, 79, 83, 184, 116, 156, 220, 78, 3, 73, 109, 202, 237, 69, 157,
      234, 130, 184, 46, 184>>,
    amount: 8000000000,
    signature: <<135, 142, 124, 91, 157, 32, 251, 93, 62, 255, 200, 74, 146,
      209, 197, 96, 21, 143, 217, 6, 49, 96, 51, 58, 248, 22, 200, 106, 95, 149,
      84, 35, 94, 64, 104, 133, 251, 189, 124, 103, 152, 173, 109, 87, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/top_up__max_effective_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_5/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_5/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<51, 205, 117, 252, 40, 235, 52, 128, 196, 144, 162, 157, 35,
    197, 33, 191, 177, 191, 174, 190, 180, 6, 175, 30, 137, 57, 183, 144, 62,
    44, 59, 252>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 31,
      address: <<105, 149, 94, 100, 204, 141, 171, 227, 154, 14, 99, 2, 219, 39,
        143, 154, 118, 229, 203, 252>>,
      amount: 374383429
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 39,
      address: <<183, 44, 116, 143, 139, 160, 237, 3, 101, 227, 158, 8, 149,
        152, 32, 98, 133, 233, 107, 152>>,
      amount: 776017398
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 42,
      address: <<156, 244, 42, 169, 84, 71, 113, 1, 115, 134, 197, 150, 47, 54,
        207, 91, 185, 153, 115, 163>>,
      amount: 757337098
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_partial_withdrawals_5/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_nonparticipating_withdrawable_member/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_nonparticipating_withdrawable_member/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<239, 255, 255, 255>>,
  sync_committee_signature: <<130, 191, 140, 158, 20, 25, 12, 22, 5, 158, 135,
    167, 200, 79, 46, 136, 110, 15, 17, 212, 245, 205, 96, 1, 5, 62, 191, 61,
    53, 71, 38, 16, 66, 31, 13, 199, 163, 48, 191, 87, 125, 248, 148, 142, 52,
    27, 47, 4, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_nonparticipating_withdrawable_member/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<142, 11, 26, 28, 39, 27, 236, 17, 148, 103, 49, 216, 28, 149, 30,
    174, 45, 214, 127, 37, 155, 26, 78, 82, 65, 199, 41, 5, 162, 113, 186, 178,
    199, 71, 128, 109, 177, 238, 143, 107, 231, 178, 6, 202, 76, 188, 127, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
...........................................file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_bad_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_bad_fork_version/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<181, 140, 114, 243, 251, 6, 13, 210, 30, 150, 40, 225, 61, 119,
      91, 215, 68, 51, 177, 5, 93, 224, 25, 246, 14, 165, 179, 11, 203, 51, 145,
      95, 143, 14, 142, 222, 85, 167, 181, 90, 8, 46, 180, 67, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/ineffective_deposit_with_bad_fork_version/post.ssz_snappy
post before deserializing BeaconState
✅ post
.file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_missing_participant/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_missing_participant/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 247, 255, 255>>,
  sync_committee_signature: <<171, 91, 1, 134, 177, 159, 73, 68, 163, 8, 233,
    191, 122, 60, 211, 131, 105, 42, 147, 40, 126, 223, 158, 98, 147, 254, 118,
    212, 214, 186, 202, 185, 251, 225, 166, 115, 178, 23, 42, 104, 204, 6, 148,
    139, 244, 49, 31, 144, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/invalid_signature_missing_participant/post.ssz_snappy
✅ post
..file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_not_activated/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_not_activated/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_proposer_is_not_activated/post.ssz_snappy
✅ post
..........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_1/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_1/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<195, 113, 111, 29, 254, 106, 86, 102, 215, 196, 181, 187, 46,
    197, 146, 153, 118, 114, 92, 49, 104, 229, 218, 149, 124, 178, 252, 161,
    159, 145, 110, 100>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 30993217735
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 31994197649
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 6,
      address: <<30, 75, 120, 105, 69, 255, 83, 131, 78, 55, 145, 45, 71, 231,
        127, 43, 186, 71, 129, 32>>,
      amount: 31995992240
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 8,
      address: <<205, 79, 237, 154, 134, 234, 77, 199, 99, 209, 130, 255, 74,
        128, 153, 84, 72, 155, 89, 152>>,
      amount: 30993993968
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_1/post.ssz_snappy
post before deserializing BeaconState
✅ post
....................................file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_slots_of_different_epochs/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_slots_of_different_epochs/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 8,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 10, 239, 214, 159, 174, 48, 70, 227, 133, 205, 84, 31, 33,
      143, 244, 76, 107, 219, 243, 86, 236, 53, 171, 96, 29, 183, 184, 181, 167,
      205, 198, 122, 28, 7, 145, 153, 247, 21, 19, 28, 48, 170, 154, 229, 159,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_slots_of_different_epochs/post.ssz_snappy
✅ post
.......................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_randomized_non_validated_execution_fields_first_payload__execution_invalid/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_randomized_non_validated_execution_fields_first_payload__execution_invalid/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_randomized_non_validated_execution_fields_first_payload__execution_invalid/post.ssz_snappy
✅ post
.............................................................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_full_withdrawal_and_duplicate_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_full_withdrawal_and_duplicate_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<139, 53, 241, 183, 92, 195, 230, 109, 169, 130, 78, 231, 216,
    143, 237, 94, 63, 232, 233, 143, 91, 187, 120, 211, 124, 111, 216, 109, 149,
    144, 97, 51>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 11,
      address: <<77, 222, 109, 238, 48, 93, 194, 33, 23, 146, 130, 14, 185, 182,
        49, 54, 56, 213, 190, 132>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 11,
      address: <<77, 222, 109, 238, 48, 93, 194, 33, 23, 146, 130, 14, 185, 182,
        49, 54, 56, 213, 190, 132>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_expected_full_withdrawal_and_duplicate_in_withdrawals/post.ssz_snappy
✅ post
........................................................file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_exited/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_exited/address_change.ssz_snappy
bls_to_execution_change before deserializing Elixir.SszTypes.SignedBLSToExecutionChange
✅ operation
%SszTypes.SignedBLSToExecutionChange{
  message: %SszTypes.BLSToExecutionChange{
    validator_index: 4,
    from_bls_pubkey: <<183, 68, 81, 102, 15, 103, 139, 114, 135, 168, 245, 254,
      23, 198, 7, 155, 83, 106, 34, 112, 224, 144, 233, 170, 214, 35, 131, 237,
      3, 46, 82, 96, 37, 22, 151, 103, 102, 48, 81, 56, 52, 8, 115, 171, 88,
      253, 63, ...>>,
    to_execution_address: "BBBBBBBBBBBBBBBBBBBB"
  },
  signature: <<128, 112, 74, 111, 46, 53, 130, 110, 134, 65, 201, 13, 51, 221,
    68, 10, 204, 28, 31, 193, 156, 114, 190, 253, 21, 76, 109, 209, 120, 142, 8,
    96, 203, 13, 1, 84, 29, 9, 173, 113, 163, 189, 233, 119, 202, 251, 13, 68,
    ...>>
}
file path: tests/minimal/capella/operations/bls_to_execution_change/pyspec_tests/success_exited/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_extra_data_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_extra_data_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/non_empty_extra_data_first_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
...file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_before_inclusion_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_before_inclusion_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_before_inclusion_delay/post.ssz_snappy
✅ post
..........................................file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_headers_are_same_sigs_are_same/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_headers_are_same_sigs_are_same/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_headers_are_same_sigs_are_same/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_non_versioned_withdrawal_credentials/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_non_versioned_withdrawal_credentials/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<255, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
      2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2>>,
    amount: 32000000000,
    signature: <<162, 205, 221, 128, 158, 52, 78, 45, 220, 69, 40, 65, 167, 64,
      217, 11, 146, 3, 6, 128, 255, 238, 243, 74, 74, 32, 222, 239, 202, 64,
      183, 18, 248, 223, 218, 196, 35, 14, 104, 84, 119, 149, 89, 252, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/new_deposit_non_versioned_withdrawal_credentials/post.ssz_snappy
post before deserializing BeaconState
✅ post
.file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/voluntary_exit_with_previous_fork_version_is_before_fork_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/voluntary_exit_with_previous_fork_version_is_before_fork_epoch/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 0, validator_index: 0},
  signature: <<139, 144, 40, 28, 216, 235, 140, 114, 150, 19, 245, 56, 232, 158,
    92, 35, 131, 242, 232, 89, 190, 244, 31, 72, 78, 11, 121, 70, 154, 34, 63,
    20, 62, 196, 129, 52, 247, 33, 52, 57, 165, 126, 182, 85, 147, 237, 196,
    177, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/voluntary_exit_with_previous_fork_version_is_before_fork_epoch/post.ssz_snappy
post before deserializing BeaconState
✅ post
.............................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_balance/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_balance/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<112, 67, 68, 255, 104, 105, 29, 145, 14, 15, 107, 13, 32, 76,
    154, 254, 158, 221, 150, 24, 56, 252, 93, 138, 170, 0, 185, 199, 42, 118,
    253, 189>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/withdrawable_epoch_but_0_balance/post.ssz_snappy
post before deserializing BeaconState
✅ post
...............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_many_incorrectly_full/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_many_incorrectly_full/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<245, 3, 106, 142, 11, 131, 164, 174, 189, 156, 60, 129, 50, 37,
    230, 102, 62, 153, 37, 224, 228, 11, 95, 39, 70, 209, 13, 33, 22, 121, 163,
    211>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 32000000001
    },
    %SszTypes.Withdrawal{
      index: 4,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_many_incorrectly_full/post.ssz_snappy
✅ post
.....file path: tests/minimal/capella/operations/deposit/pyspec_tests/effective_deposit_with_genesis_fork_version/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/effective_deposit_with_genesis_fork_version/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<180, 232, 75, 231, 0, 93, 243, 0, 144, 12, 111, 95, 103, 207, 40,
      131, 116, 227, 60, 63, 5, 194, 241, 11, 109, 47, 247, 84, 233, 46, 168,
      87, 125, 85, 185, 30, 34, 206, 162, 120, 34, 80, 168, 188, 125, 42, 244,
      ...>>,
    withdrawal_credentials: <<0, 127, 133, 142, 78, 58, 165, 134, 18, 125, 228,
      27, 145, 242, 231, 135, 39, 34, 188, 221, 53, 203, 170, 30, 105, 111, 60,
      16, 99, 127, 241, 143>>,
    amount: 32000000000,
    signature: <<185, 127, 149, 231, 100, 189, 154, 47, 204, 89, 53, 192, 20,
      225, 214, 91, 76, 31, 141, 76, 16, 72, 34, 216, 56, 190, 158, 187, 88, 61,
      32, 139, 22, 136, 125, 192, 146, 179, 16, 87, 249, 119, 188, 23, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/effective_deposit_with_genesis_fork_version/post.ssz_snappy
post before deserializing BeaconState
✅ post
.........file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/randomized_non_validated_execution_fields_first_payload__execution_valid/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/randomized_non_validated_execution_fields_first_payload__execution_valid/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/randomized_non_validated_execution_fields_first_payload__execution_valid/post.ssz_snappy
post before deserializing BeaconState
✅ post
....file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_duplicate_index_double_signed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_duplicate_index_double_signed/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 30, 33, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<181, 21, 36, 12, 250, 180, 54, 78, 98, 37, 172, 85, 10, 79,
      226, 57, 23, 135, 168, 44, 216, 25, 200, 184, 23, 104, 102, 109, 146, 137,
      157, 59, 12, 133, 13, 170, 72, 53, 203, 113, 228, 138, 137, 69, 145, 223,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_duplicate_index_double_signed/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_many_incorrectly_partial/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_many_incorrectly_partial/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<114, 68, 200, 77, 134, 31, 92, 47, 46, 93, 119, 194, 115, 116,
    162, 220, 188, 132, 225, 234, 127, 147, 18, 66, 80, 246, 178, 100, 48, 251,
    135, 108>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1>>,
      amount: 1000000000
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 2,
      address: <<36, 17, 253, 13, 243, 161, 2, 248, 72, 154, 76, 27, 229, 53,
        244, 253, 95, 136, 16, 201>>,
      amount: 1000000001
    },
    %SszTypes.Withdrawal{
      index: 4,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_many_incorrectly_partial/post.ssz_snappy
✅ post
......................file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_participating_withdrawable_member/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_participating_withdrawable_member/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<184, 38, 209, 7, 244, 192, 253, 130, 249, 250,
    204, 253, 51, 252, 31, 141, 235, 82, 136, 73, 248, 123, 115, 171, 8, 78,
    228, 81, 1, 11, 182, 31, 35, 1, 69, 60, 85, 198, 155, 200, 221, 63, 30, 59,
    204, 187, 167, 172, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_participating_withdrawable_member/post.ssz_snappy
post before deserializing BeaconState
✅ post
........................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_bad_extra_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_bad_extra_index/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33, 34],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att2_bad_extra_index/post.ssz_snappy
✅ post
............file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_empty_participants_seemingly_valid_sig/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_empty_participants_seemingly_valid_sig/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<16>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_empty_participants_seemingly_valid_sig/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_1/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_1/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_incorrect_sig_1/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/slashed_and_proposer_index_the_same/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/slashed_and_proposer_index_the_same/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/slashed_and_proposer_index_the_same/post.ssz_snappy
post before deserializing BeaconState
✅ post
...............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_exited/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_exited/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 0,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<130, 199, 135, 70, 165, 226, 82, 167, 194, 237, 222, 164, 240,
    198, 76, 41, 254, 79, 56, 151, 1, 237, 84, 238, 111, 86, 27, 203, 115, 166,
    140, 252>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 15,
      address: <<252, 121, 111, 204, 156, 101, 229, 254, 136, 0, 51, 231, 122,
        161, 184, 244, 177, 112, 250, 160>>,
      amount: 1000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/success_one_partial_withdrawable_exited/post.ssz_snappy
post before deserializing BeaconState
✅ post
..................file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_new_source_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_new_source_epoch/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 1
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<178, 49, 180, 9, 7, 31, 36, 82, 82, 172, 161, 91, 142, 14, 179,
    208, 93, 34, 206, 108, 101, 45, 168, 198, 194, 218, 131, 248, 104, 133, 233,
    99, 210, 217, 10, 128, 72, 205, 242, 186, 48, 22, 186, 156, 203, 58, 73,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_new_source_epoch/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_withdrawal_credentials_top_up/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_withdrawal_credentials_top_up/deposit.ssz_snappy
deposit before deserializing Elixir.SszTypes.Deposit
✅ operation
%SszTypes.Deposit{
  proof: [
    <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0>>,
    <<245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155,
      67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169, 39, 89, 251, 75>>,
    <<219, 86, 17, 78, 0, 253, 212, 193, 248, 92, 137, 43, 243, 90, 201, 168,
      146, 137, 170, 236, 177, 235, 208, 169, 108, 222, 96, 106, 116, 139, 93,
      113>>,
    <<199, 128, 9, 253, 240, 127, 197, 106, 17, 241, 34, 55, 6, 88, 163, 83,
      170, 165, 66, 237, 99, 228, 76, 75, 193, 95, 244, 205, 16, 90, 179, 60>>,
    <<83, 109, 152, 131, 127, 45, 209, 101, 165, 93, 94, 234, 233, 20, 133, 149,
      68, 114, 213, 111, 36, 109, 242, 86, 191, 60, 174, 25, 53, 42, 18, 60>>,
    <<158, 253, 224, 82, 170, 21, 66, 159, 174, 5, 186, 212, 208, 177, 215, 198,
      77, 166, 77, 3, 215, 161, 133, 74, 88, 140, 44, 184, 67, 12, 13, 48>>,
    <<216, 141, 223, 238, 212, 0, 168, 117, 85, 150, 178, 25, 66, 193, 73, 126,
      17, 76, 48, 46, 97, 24, 41, 15, 145, 230, 119, 41, 118, 4, 31, 161>>,
    <<135, 235, 13, 219, 165, 126, 53, 246, 210, 134, 103, 56, 2, 164, 175, 89,
      117, 226, 37, 6, 199, 207, 76, 100, 187, 107, 229, 238, 17, 82, 127, 44>>,
    <<38, 132, 100, 118, 253, 95, 197, 74, 93, 67, 56, 81, 103, 201, 81, 68,
      242, 100, 63, 83, 60, 200, 91, 185, 209, 107, 120, 47, 141, 125, 177,
      147>>,
    <<80, 109, 134, 88, 45, 37, 36, 5, 184, 64, 1, 135, 146, 202, 210, 191, 18,
      89, 241, 239, 90, 165, 248, 135, 225, 60, 178, 240, 9, 79, 81, 225>>,
    <<255, 255, 10, 215, 230, 89, 119, 47, 149, 52, 193, 149, 200, 21, 239, 196,
      1, 78, 241, 225, 218, 237, 68, 4, 192, 99, 133, 209, 17, 146, 233, 43>>,
    <<108, 240, 65, 39, 219, 5, 68, 28, 216, 51, 16, 122, 82, 190, 133, 40, 104,
      137, 14, 67, 23, 230, 160, 42, 180, 118, 131, 170, 117, 150, 66, 32>>,
    <<183, 208, 95, 135, 95, 20, 0, 39, 239, 81, 24, 162, 36, 123, 187, 132,
      206, 143, 47, 15, 17, 35, 98, 48, 133, 218, 247, 150, 12, 50, 159, 95>>,
    <<223, 106, 245, 245, 187, 219, 107, 233, 239, 138, 166, 24, 228, 191, 128,
      115, 150, 8, 103, 23, 30, 41, 103, 111, 139, 40, 77, 234, 106, 8, 168,
      94>>,
    <<181, 141, 144, 15, 94, 24, 46, 60, 80, 239, 116, 150, 158, 161, 108, 119,
      38, 197, 73, 117, 124, 194, 53, 35, 195, 105, 88, 125, 167, 41, 55, 132>>,
    <<212, 154, 117, 2, 255, 207, 176, 52, 11, 29, 120, 133, 104, 133, 0, 202,
      48, 129, 97, 167, 249, 107, 98, 223, 157, 8, 59, 113, 252, 200, 242,
      187>>,
    <<143, 230, 177, 104, 146, 86, 192, 211, 133, 244, 47, 91, 190, 32, 39, 162,
      44, 25, 150, 225, 16, 186, 151, 193, 113, 211, 229, 148, 141, 233, 43,
      235>>,
    <<141, 13, 99, 195, 158, 186, 222, 133, 9, 224, 174, 60, 156, 56, 118, 251,
      95, 161, 18, 190, 24, 249, 5, 236, 172, 254, 203, 146, 5, 118, 3, ...>>,
    <<149, 238, 200, 178, 229, 65, 202, 212, 233, 29, 227, 131, 133, 242, 224,
      70, 97, 159, 84, 73, 108, 35, 130, 203, 108, 172, 213, 185, 140, 38,
      ...>>,
    <<248, 147, 233, 8, 145, 119, 117, 182, 43, 255, 35, 41, 77, 187, 227, 161,
      205, 142, 108, 193, 195, 91, 72, 1, 136, 123, 100, 106, 111, ...>>,
    <<205, 219, 167, 181, 146, 227, 19, 51, 147, 193, 97, 148, 250, 199, 67, 26,
      191, 47, 84, 133, 237, 113, 29, 178, 130, 24, 60, 129, ...>>,
    <<138, 141, 127, 227, 175, 140, 170, 8, 90, 118, 57, 168, 50, 0, 20, 87,
      223, 185, 18, 138, 128, 97, 20, 42, 208, 51, 86, ...>>,
    <<254, 179, 195, 55, 215, 165, 26, 111, 191, 0, 185, 227, 76, 82, 225, 201,
      25, 92, 150, 155, 212, 231, 160, 191, 213, 29, ...>>,
    <<231, 31, 10, 168, 60, 195, 46, 223, 190, 250, 159, 77, 62, 1, 116, 202,
      133, 24, 46, 236, 159, 58, 9, 246, 166, ...>>,
    <<49, 32, 111, 168, 10, 80, 187, 106, 190, 41, 8, 80, 88, 241, 98, 18, 33,
      42, 96, 238, 200, 240, 73, 254, ...>>,
    <<33, 53, 43, 254, 203, 237, 221, 233, 147, 131, 159, 97, 76, 61, 172, 10,
      62, 227, 117, 67, 249, 180, 18, ...>>,
    <<97, 158, 49, 39, 36, 187, 109, 124, 49, 83, 237, 157, 231, 145, 215, 100,
      163, 102, 179, 137, 175, 19, ...>>,
    <<124, 221, 41, 134, 38, 130, 80, 98, 141, 12, 16, 227, 133, 197, 140, 97,
      145, 230, 251, 224, 81, ...>>,
    <<132, 137, 48, 189, 123, 168, 202, 197, 70, 97, 7, 33, 19, 251, 39, 136,
      105, 224, 123, 184, ...>>,
    <<136, 105, 255, 44, 34, 178, 140, 193, 5, 16, 217, 133, 50, 146, 128, 51,
      40, 190, 79, ...>>,
    <<181, 254, 40, 231, 159, 27, 133, 15, 134, 88, 36, 108, 233, 182, 161, 231,
      180, 159, ...>>,
    <<152, 94, 146, 159, 112, 175, 40, 208, 189, 209, 169, 10, 128, 143, 151,
      127, 89, ...>>,
    <<1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  ],
  data: %SszTypes.DepositData{
    pubkey: <<151, 241, 211, 167, 49, 151, 215, 148, 38, 149, 99, 140, 79, 169,
      172, 15, 195, 104, 140, 79, 151, 116, 185, 5, 161, 78, 58, 63, 23, 27,
      172, 88, 108, 85, 232, 63, 249, 122, 26, 239, 251, 58, 240, 10, 219, 34,
      198, ...>>,
    withdrawal_credentials: <<0, 135, 90, 23, 5, 165, 253, 172, 32, 107, 233,
      150, 244, 220, 31, 114, 110, 166, 182, 136, 97, 235, 116, 28, 55, 222,
      247, 39, 127, 23, 158, 55>>,
    amount: 8000000000,
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>
  }
}
file path: tests/minimal/capella/operations/deposit/pyspec_tests/incorrect_withdrawal_credentials_top_up/post.ssz_snappy
post before deserializing BeaconState
✅ post
...........file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/default_exit_epoch_subsequent_exit/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/default_exit_epoch_subsequent_exit/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 64, validator_index: 0},
  signature: <<149, 73, 243, 215, 181, 35, 55, 21, 80, 255, 80, 70, 102, 80,
    217, 83, 66, 101, 86, 122, 22, 164, 205, 114, 184, 126, 239, 229, 17, 81,
    222, 241, 206, 126, 129, 236, 201, 191, 219, 172, 50, 5, 92, 225, 216, 96,
    150, 124, ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/default_exit_epoch_subsequent_exit/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_after_epoch_slots/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_after_epoch_slots/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_after_epoch_slots/post.ssz_snappy
✅ post
.file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_sqrt_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_sqrt_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193, 156,
    233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194, 90, 119,
    89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206, 165, 86,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/correct_attestation_included_at_sqrt_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
.............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_0/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_0/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<116, 229, 54, 46, 30, 59, 232, 221, 148, 34, 105, 99, 166, 147,
    34, 101, 107, 120, 169, 226, 226, 127, 216, 164, 29, 185, 34, 102, 17, 180,
    23, 171>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 30993766678
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 30993766678
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 5,
      address: <<113, 239, 248, 53, 59, 231, 116, 223, 129, 126, 205, 18, 31,
        121, 73, 72, 186, 138, 105, 4>>,
      amount: 30993766678
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 9,
      address: <<233, 89, 117, 77, 100, 25, 166, 241, 178, 150, 2, 161, 154,
        100, 73, 106, 30, 236, 171, 132>>,
      amount: 30993766678
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_0/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/voluntary_exit_with_current_fork_version_not_is_before_fork_epoch/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/voluntary_exit_with_current_fork_version_not_is_before_fork_epoch/voluntary_exit.ssz_snappy
voluntary_exit before deserializing Elixir.SszTypes.SignedVoluntaryExit
✅ operation
%SszTypes.SignedVoluntaryExit{
  message: %SszTypes.VoluntaryExit{epoch: 1, validator_index: 0},
  signature: <<144, 212, 87, 170, 99, 54, 225, 168, 193, 64, 228, 131, 229, 225,
    47, 129, 79, 81, 142, 197, 151, 187, 51, 54, 230, 121, 233, 97, 141, 198, 9,
    25, 95, 209, 82, 29, 50, 51, 188, 207, 113, 191, 77, 48, 140, 216, 208, 61,
    ...>>
}
file path: tests/minimal/capella/operations/voluntary_exit/pyspec_tests/voluntary_exit_with_current_fork_version_not_is_before_fork_epoch/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......................................file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2_swap/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2_swap/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      218, ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1_and_2_swap/post.ssz_snappy
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_min_inclusion_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_min_inclusion_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<142, 11, 26, 28, 39, 27, 236, 17, 148, 103, 49, 216, 28, 149, 30,
    174, 45, 214, 127, 37, 155, 26, 78, 82, 65, 199, 41, 5, 162, 113, 186, 178,
    199, 71, 128, 109, 177, 238, 143, 107, 231, 178, 6, 202, 76, 188, 127, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_min_inclusion_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
............file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_past_timestamp_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_past_timestamp_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_past_timestamp_first_payload/post.ssz_snappy
✅ post
................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/already_exited_long_ago/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/already_exited_long_ago/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/already_exited_long_ago/post.ssz_snappy
post before deserializing BeaconState
✅ post
................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_regular_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_regular_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/success_regular_payload/post.ssz_snappy
post before deserializing BeaconState
✅ post
......file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_future_timestamp_first_payload/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_future_timestamp_first_payload/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/invalid_future_timestamp_first_payload/post.ssz_snappy
✅ post
.................file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_current_source_root/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_current_source_root/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 40,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
      epoch: 4
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 5
    }
  },
  signature: <<180, 224, 24, 151, 77, 129, 26, 6, 170, 16, 95, 245, 30, 114,
    112, 187, 214, 172, 29, 42, 114, 81, 55, 62, 200, 147, 236, 40, 188, 91,
    195, 65, 244, 98, 75, 36, 85, 172, 126, 234, 179, 163, 2, 160, 133, 70, 101,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_current_source_root/post.ssz_snappy
✅ post
...file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_high_index/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_high_index/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33, 64],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
          27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183,
          236, 18, 174>>,
        epoch: 0
      }
    },
    signature: <<160, 109, 12, 191, 0, 166, 87, 216, 30, 21, 229, 90, 9, 193,
      156, 233, 86, 118, 159, 142, 19, 114, 180, 20, 108, 194, 219, 203, 194,
      90, 119, 89, 121, 105, 100, 12, 164, 47, 164, 179, 154, 172, 80, 49, 206,
      165, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: [6, 15, 30, 33],
    data: %SszTypes.AttestationData{
      slot: 0,
      index: 0,
      beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
        132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
        183, 236, 18, 174>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 0
      }
    },
    signature: <<143, 28, 47, 44, 37, 232, 211, 184, 172, 51, 107, 195, 249,
      224, 11, 121, 5, 218, 181, 157, 186, 124, 148, 199, 95, 80, 112, 109, 204,
      161, 227, 209, 167, 64, 5, 52, 160, 103, 83, 217, 100, 204, 214, 104, 57,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/invalid_att1_high_index/post.ssz_snappy
✅ post
...........file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_partially_withdrawable_too_few_in_withdrawals/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_partially_withdrawable_too_few_in_withdrawals/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<184, 253, 14, 10, 128, 224, 196, 91, 118, 129, 54, 11, 26, 250,
    150, 57, 48, 204, 247, 4, 37, 12, 222, 88, 87, 158, 230, 181, 81, 196, 113,
    145>>,
  transactions: [],
  withdrawals: []
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_a_lot_partially_withdrawable_too_few_in_withdrawals/post.ssz_snappy
✅ post
.....................file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_of_many_incorrectly_full/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_of_many_incorrectly_full/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<13, 180, 93, 4, 140, 73, 132, 181, 46, 2, 194, 124, 13, 204, 21,
    67, 161, 96, 4, 129, 102, 176, 89, 100, 243, 202, 65, 219, 75, 200, 237,
    163>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 0,
      address: <<230, 243, 55, 38, 175, 207, 109, 168, 38, 211, 132, 36, 123,
        179, 50, 146, 15, 69, 120, 137>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 32000000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 2,
      address: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153>>,
      amount: 32004000000
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 3,
      address: <<234, 239, 195, 150, 70, 245, 56, 149, 41, 37, 150, 187, 225,
        153, 226, 215, 209, 136, 74, 184>>,
      amount: 32000000000
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_one_of_many_incorrectly_full/post.ssz_snappy
✅ post
.........................................file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/invalid_incorrect_sig_1/post.ssz_snappy
✅ post
..........................................file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/proposer_index_slashed/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/proposer_index_slashed/attester_slashing.ssz_snappy
attester_slashing before deserializing Elixir.SszTypes.AttesterSlashing
✅ operation
%SszTypes.AttesterSlashing{
  attestation_1: %SszTypes.IndexedAttestation{
    attesting_indices: ~c"\t",
    data: %SszTypes.AttestationData{
      slot: 8,
      index: 0,
      beacon_block_root: <<148, 161, 114, 87, 42, 255, 170, 176, 101, 241, 117,
        237, 186, 174, 48, 251, 127, 80, 205, 244, 198, 59, 115, 79, 155, 117,
        105, 243, 81, 52, 198, 93>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<148, 161, 114, 87, 42, 255, 170, 176, 101, 241, 117, 237, 186,
          174, 48, 251, 127, 80, 205, 244, 198, 59, 115, 79, 155, 117, 105, 243,
          81, 52, 198, 93>>,
        epoch: 1
      }
    },
    signature: <<160, 239, 71, 166, 221, 26, 125, 154, 178, 147, 27, 84, 155,
      49, 19, 26, 13, 81, 145, 153, 73, 234, 172, 203, 225, 95, 34, 82, 63, 180,
      209, 87, 236, 171, 104, 156, 103, 17, 102, 102, 222, 103, 98, 26, 130,
      119, ...>>
  },
  attestation_2: %SszTypes.IndexedAttestation{
    attesting_indices: ~c"\t",
    data: %SszTypes.AttestationData{
      slot: 8,
      index: 0,
      beacon_block_root: <<148, 161, 114, 87, 42, 255, 170, 176, 101, 241, 117,
        237, 186, 174, 48, 251, 127, 80, 205, 244, 198, 59, 115, 79, 155, 117,
        105, 243, 81, 52, 198, 93>>,
      source: %SszTypes.Checkpoint{
        root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
        epoch: 0
      },
      target: %SszTypes.Checkpoint{
        root: <<1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>>,
        epoch: 1
      }
    },
    signature: <<171, 244, 116, 227, 204, 105, 151, 222, 250, 211, 250, 23, 125,
      175, 29, 118, 229, 114, 74, 166, 15, 233, 159, 226, 114, 10, 162, 92, 197,
      221, 166, 175, 251, 24, 14, 190, 237, 85, 89, 19, 216, 95, 129, 255, 109,
      ...>>
  }
}
file path: tests/minimal/capella/operations/attester_slashing/pyspec_tests/proposer_index_slashed/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_not_full_participants/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_not_full_participants/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<99, 19, 251, 126>>,
  sync_committee_signature: <<167, 64, 122, 54, 31, 218, 243, 254, 174, 231, 36,
    199, 102, 140, 34, 1, 52, 249, 85, 224, 166, 73, 120, 165, 80, 198, 200, 62,
    18, 153, 175, 150, 146, 247, 129, 77, 53, 235, 188, 192, 39, 224, 117, 61,
    205, 23, 250, 152, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_rewards_not_full_participants/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......................file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/randomized_non_validated_execution_fields_regular_payload__execution_valid/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/randomized_non_validated_execution_fields_regular_payload__execution_valid/body.ssz_snappy
✅ operation
"no post"
file path: tests/minimal/capella/operations/execution_payload/pyspec_tests/randomized_non_validated_execution_fields_regular_payload__execution_valid/post.ssz_snappy
post before deserializing BeaconState
✅ post
........file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_sqrt_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_sqrt_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<138, 178, 99, 20, 20, 253, 49, 193, 153, 93, 21, 184, 62, 86, 17,
    82, 139, 128, 247, 162, 115, 228, 228, 96, 2, 117, 56, 57, 91, 173, 149, 86,
    191, 183, 31, 218, 120, 126, 0, 145, 216, 144, 134, 99, 197, 166, 75, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_included_at_sqrt_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
..............file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_amount_partial/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_amount_partial/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 6,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<5, 19, 81, 85, 87, 199, 80, 253, 132, 59, 164, 183, 6, 50, 125,
    146, 245, 70, 254, 88, 28, 45, 176, 59, 150, 158, 28, 21, 188, 38, 51, 65>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 1,
      address: <<219, 37, 243, 1, 41, 128, 39, 248, 233, 138, 142, 12, 210, 220,
        188, 198, 96, 114, 61, 123>>,
      amount: 32000000001
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/invalid_incorrect_amount_partial/post.ssz_snappy
✅ post
.......file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_2/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_2/execution_payload.ssz_snappy
withdrawals before deserializing Elixir.SszTypes.ExecutionPayload
✅ operation
%SszTypes.ExecutionPayload{
  parent_hash: <<204, 210, 34, 97, 127, 219, 171, 7, 41, 82, 84, 107, 77, 47,
    243, 167, 129, 159, 178, 156, 44, 8, 194, 213, 60, 180, 93, 53, 194, 17,
    168, 42>>,
  fee_recipient: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
  state_root: "                                ",
  receipts_root: <<29, 204, 77, 232, 222, 199, 93, 122, 171, 133, 181, 103, 182,
    204, 212, 26, 211, 18, 69, 27, 148, 138, 116, 19, 240, 161, 66, 253, 64,
    212, 147, 71>>,
  logs_bloom: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>,
  prev_randao: <<218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
    218, 218, 218, 218, 218>>,
  block_number: 1,
  gas_limit: 30000000,
  gas_used: 0,
  timestamp: 342,
  extra_data: "",
  base_fee_per_gas: 1000000000,
  block_hash: <<154, 166, 34, 14, 102, 42, 217, 11, 66, 151, 3, 22, 16, 91, 20,
    164, 206, 186, 178, 250, 7, 90, 149, 34, 194, 183, 198, 4, 203, 48, 243,
    42>>,
  transactions: [],
  withdrawals: [
    %SszTypes.Withdrawal{
      index: 0,
      validator_index: 4,
      address: <<2, 243, 231, 199, 189, 84, 140, 177, 182, 28, 38, 214, 129, 33,
        1, 206, 221, 62, 198, 112>>,
      amount: 30993581266
    },
    %SszTypes.Withdrawal{
      index: 1,
      validator_index: 5,
      address: <<113, 239, 248, 53, 59, 231, 116, 223, 129, 126, 205, 18, 31,
        121, 73, 72, 186, 138, 105, 4>>,
      amount: 30997405986
    },
    %SszTypes.Withdrawal{
      index: 2,
      validator_index: 10,
      address: <<192, 41, 241, 50, 113, 69, 28, 208, 250, 242, 51, 21, 0, 208,
        156, 226, 218, 154, 176, 178>>,
      amount: 30993581266
    },
    %SszTypes.Withdrawal{
      index: 3,
      validator_index: 11,
      address: <<77, 222, 109, 238, 48, 93, 194, 33, 23, 146, 130, 14, 185, 182,
        49, 54, 56, 213, 190, 132>>,
      amount: 30993581266
    }
  ]
}
file path: tests/minimal/capella/operations/withdrawals/pyspec_tests/random_full_withdrawals_2/post.ssz_snappy
post before deserializing BeaconState
✅ post
..............................file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/basic/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/basic/proposer_slashing.ssz_snappy
proposer_slashing before deserializing Elixir.SszTypes.ProposerSlashing
✅ operation
%SszTypes.ProposerSlashing{
  signed_header_1: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: "33333333333333333333333333333333",
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<179, 222, 248, 119, 98, 254, 161, 65, 90, 73, 117, 6, 143, 170,
      194, 63, 131, 133, 159, 213, 140, 247, 208, 66, 129, 165, 93, 125, 86, 5,
      125, 33, 45, 217, 186, 95, 98, 107, 91, 14, 203, 94, 193, 48, 96, 70, 199,
      ...>>
  },
  signed_header_2: %SszTypes.SignedBeaconBlockHeader{
    message: %SszTypes.BeaconBlockHeader{
      slot: 0,
      proposer_index: 63,
      parent_root: <<153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
        153, 153, 153, 153, 153, 153>>,
      state_root: "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
      body_root: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
    },
    signature: <<171, 109, 205, 49, 146, 172, 34, 66, 245, 113, 128, 226, 244,
      34, 89, 167, 64, 75, 52, 173, 196, 8, 10, 170, 61, 22, 13, 159, 160, 1, 7,
      83, 198, 108, 194, 31, 233, 124, 60, 185, 246, 151, 106, 108, 154, 87,
      ...>>
  }
}
file path: tests/minimal/capella/operations/proposer_slashing/pyspec_tests/basic/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......................file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_empty_participants_zeroes_sig/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_empty_participants_zeroes_sig/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<16>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159, 132, 114,
        27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87, 183, 236,
        18, 174>>,
      epoch: 0
    }
  },
  signature: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/invalid_empty_participants_zeroes_sig/post.ssz_snappy
✅ post
.............file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_all_but_one_participating_without_duplicates/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_all_but_one_participating_without_duplicates/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<254, 255, 255, 255>>,
  sync_committee_signature: <<173, 193, 242, 129, 108, 252, 167, 207, 16, 52,
    136, 134, 63, 109, 72, 46, 95, 217, 36, 124, 44, 228, 19, 14, 200, 148, 179,
    63, 116, 5, 20, 11, 182, 43, 213, 238, 168, 185, 120, 95, 248, 53, 242, 239,
    41, 6, 254, 253, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/random_all_but_one_participating_without_duplicates/post.ssz_snappy
post before deserializing BeaconState
✅ post
...............file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_sqrt_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_sqrt_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: <<19, 231, 213, 129, 18, 84, 182, 147, 78, 55, 28, 159,
      132, 114, 27, 239, 237, 219, 16, 227, 51, 31, 248, 252, 59, 89, 51, 87,
      183, 236, 18, 174>>,
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<142, 11, 26, 28, 39, 27, 236, 17, 148, 103, 49, 216, 28, 149, 30,
    174, 45, 214, 127, 37, 155, 26, 78, 82, 65, 199, 41, 5, 162, 113, 186, 178,
    199, 71, 128, 109, 177, 238, 143, 107, 231, 178, 6, 202, 76, 188, 127, ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_target_included_at_sqrt_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
.....file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_participating_exited_member/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_participating_exited_member/sync_aggregate.ssz_snappy
sync_aggregate before deserializing Elixir.SszTypes.SyncAggregate
✅ operation
%SszTypes.SyncAggregate{
  sync_committee_bits: <<255, 255, 255, 255>>,
  sync_committee_signature: <<184, 38, 209, 7, 244, 192, 253, 130, 249, 250,
    204, 253, 51, 252, 31, 141, 235, 82, 136, 73, 248, 123, 115, 171, 8, 78,
    228, 81, 1, 11, 182, 31, 35, 1, 69, 60, 85, 198, 155, 200, 221, 63, 30, 59,
    204, 187, 167, 172, ...>>
}
file path: tests/minimal/capella/operations/sync_aggregate/pyspec_tests/sync_committee_with_participating_exited_member/post.ssz_snappy
post before deserializing BeaconState
✅ post
.......file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_included_at_sqrt_epoch_delay/pre.ssz_snappy
pre before deserializing BeaconState
✅ pre
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_included_at_sqrt_epoch_delay/attestation.ssz_snappy
attestation before deserializing Elixir.SszTypes.Attestation
✅ operation
%SszTypes.Attestation{
  aggregation_bits: <<31>>,
  data: %SszTypes.AttestationData{
    slot: 0,
    index: 0,
    beacon_block_root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    source: %SszTypes.Checkpoint{
      root: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0>>,
      epoch: 0
    },
    target: %SszTypes.Checkpoint{
      root: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
      epoch: 0
    }
  },
  signature: <<131, 219, 207, 56, 2, 14, 226, 218, 219, 212, 38, 35, 173, 136,
    237, 54, 244, 172, 212, 20, 175, 172, 12, 99, 148, 138, 3, 105, 21, 83, 99,
    185, 81, 187, 162, 114, 165, 216, 124, 203, 181, 186, 112, 0, 74, 196, 79,
    ...>>
}
file path: tests/minimal/capella/operations/attestation/pyspec_tests/incorrect_head_and_target_included_at_sqrt_epoch_delay/post.ssz_snappy
post before deserializing BeaconState
✅ post
.............
Finished in 5.3 seconds (5.3s async, 0.00s sync)
1 doctest, 1 property, 8503 tests, 0 failures, 2525 excluded, 1740 skipped

Randomized with seed 740583
